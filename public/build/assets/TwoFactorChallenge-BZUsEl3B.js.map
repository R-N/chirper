{"version":3,"file":"TwoFactorChallenge-BZUsEl3B.js","sources":["../../../resources/js/modules/user/auth/pages/TwoFactorChallenge.vue","../../../resources/js/modules/user/auth/pages/TwoFactorChallenge.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { nextTick } from 'vue';\nimport { Head, useForm } from '@inertiajs/vue3';\nimport InputError from '@/components/auth/InputError.vue';\nimport { VCard, VCardText, VCardTitle, VCardActions, VTextField, VLabel, VBtn, VSpacer } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\nimport authService from '@/modules/user/auth/services/auth.js';\nimport { router } from '@inertiajs/vue3';\nimport AuthLayout from '../layouts/Auth.vue';\nimport GuestLayout from '@/layouts/GuestLayout.vue';\n\n@Component({\n  components: {\n    AuthLayout,\n    GuestLayout,\n    InputError,\n    VCard,\n    VCardText,\n    VCardTitle,\n    VCardActions,\n    VTextField,\n    VLabel,\n    VBtn,\n    VSpacer,\n    Head,\n  }\n})\nclass TwoFactorChallengePage extends Vue {\n  recovery = false;\n\n  form = useForm({\n    code: '',\n    recovery_code: '',\n  });\n\n  @Ref('recoveryCodeInput') recoveryCodeInput;\n  @Ref('codeInput') codeInput;\n\n  async toggleRecovery(){\n    this.recovery = !this.recovery;\n\n    await nextTick();\n\n    if (this.recovery) {\n      this.recoveryCodeInput.value.focus();\n      this.form.code = '';\n    } else {\n      this.codeInput.value.focus();\n      this.form.recovery_code = '';\n    }\n  };\n\n  async submit() {\n    let res = await authService.twoFactorLogin(this.form);\n    router.visit(res.redirect || \"/dashboard\");\n  }\n}\nexport default toNative(TwoFactorChallengePage);\n\n\n</script>\n\n<template>\n  <GuestLayout title=\"Two-factor Confirmation\">\n    <AuthLayout>\n      <VCard class=\"mx-auto\" max-width=\"400\" variant=\"elevated\" elevation=\"6\">\n        <VCardText class=\"text-gray-600 dark:text-gray-400\">\n          <template v-if=\"!recovery\">\n            Please confirm access to your account by entering the authentication code provided by your authenticator application.\n          </template>\n          <template v-else>\n            Please confirm access to your account by entering one of your emergency recovery codes.\n          </template>\n        </VCardText>\n        \n        <VCardText>\n          <form @submit.prevent=\"submit\">\n            <div v-if=\"!recovery\">\n              <VLabel for=\"code\">Code</VLabel>\n              <VTextField\n                id=\"code\"\n                ref=\"codeInput\"\n                v-model=\"form.code\"\n                type=\"text\"\n                inputmode=\"numeric\"\n                variant=\"outlined\"\n                autocomplete=\"one-time-code\"\n                autofocus\n              />\n              <InputError class=\"mt-2\" :message=\"form.errors.code\" />\n            </div>\n            \n            <div v-else>\n              <VLabel for=\"recovery_code\">Recovery Code</VLabel>\n              <VTextField\n                id=\"recovery_code\"\n                ref=\"recoveryCodeInput\"\n                v-model=\"form.recovery_code\"\n                type=\"text\"\n                variant=\"outlined\"\n                autocomplete=\"one-time-code\"\n              />\n              <InputError class=\"mt-2\" :message=\"form.errors.recovery_code\" />\n            </div>\n          </form>\n        </VCardText>\n        \n        <VCardActions class=\"d-flex justify-end\">\n          <VBtn variant=\"text\" @click.prevent=\"toggleRecovery\">\n            <template v-if=\"!recovery\">Use a recovery code</template>\n            <template v-else>Use an authentication code</template>\n          </VBtn>\n          <VSpacer />\n          <VBtn color=\"primary\" variant=\"elevated\" :loading=\"form.processing\" @click=\"submit\">\n            Log in\n          </VBtn>\n        </VCardActions>\n      </VCard>\n    </AuthLayout>\n  </GuestLayout>\n</template>\n","<script lang=\"ts\">\nimport { nextTick } from 'vue';\nimport { Head, useForm } from '@inertiajs/vue3';\nimport InputError from '@/components/auth/InputError.vue';\nimport { VCard, VCardText, VCardTitle, VCardActions, VTextField, VLabel, VBtn, VSpacer } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\nimport authService from '@/modules/user/auth/services/auth.js';\nimport { router } from '@inertiajs/vue3';\nimport AuthLayout from '../layouts/Auth.vue';\nimport GuestLayout from '@/layouts/GuestLayout.vue';\n\n@Component({\n  components: {\n    AuthLayout,\n    GuestLayout,\n    InputError,\n    VCard,\n    VCardText,\n    VCardTitle,\n    VCardActions,\n    VTextField,\n    VLabel,\n    VBtn,\n    VSpacer,\n    Head,\n  }\n})\nclass TwoFactorChallengePage extends Vue {\n  recovery = false;\n\n  form = useForm({\n    code: '',\n    recovery_code: '',\n  });\n\n  @Ref('recoveryCodeInput') recoveryCodeInput;\n  @Ref('codeInput') codeInput;\n\n  async toggleRecovery(){\n    this.recovery = !this.recovery;\n\n    await nextTick();\n\n    if (this.recovery) {\n      this.recoveryCodeInput.value.focus();\n      this.form.code = '';\n    } else {\n      this.codeInput.value.focus();\n      this.form.recovery_code = '';\n    }\n  };\n\n  async submit() {\n    let res = await authService.twoFactorLogin(this.form);\n    router.visit(res.redirect || \"/dashboard\");\n  }\n}\nexport default toNative(TwoFactorChallengePage);\n\n\n</script>\n\n<template>\n  <GuestLayout title=\"Two-factor Confirmation\">\n    <AuthLayout>\n      <VCard class=\"mx-auto\" max-width=\"400\" variant=\"elevated\" elevation=\"6\">\n        <VCardText class=\"text-gray-600 dark:text-gray-400\">\n          <template v-if=\"!recovery\">\n            Please confirm access to your account by entering the authentication code provided by your authenticator application.\n          </template>\n          <template v-else>\n            Please confirm access to your account by entering one of your emergency recovery codes.\n          </template>\n        </VCardText>\n        \n        <VCardText>\n          <form @submit.prevent=\"submit\">\n            <div v-if=\"!recovery\">\n              <VLabel for=\"code\">Code</VLabel>\n              <VTextField\n                id=\"code\"\n                ref=\"codeInput\"\n                v-model=\"form.code\"\n                type=\"text\"\n                inputmode=\"numeric\"\n                variant=\"outlined\"\n                autocomplete=\"one-time-code\"\n                autofocus\n              />\n              <InputError class=\"mt-2\" :message=\"form.errors.code\" />\n            </div>\n            \n            <div v-else>\n              <VLabel for=\"recovery_code\">Recovery Code</VLabel>\n              <VTextField\n                id=\"recovery_code\"\n                ref=\"recoveryCodeInput\"\n                v-model=\"form.recovery_code\"\n                type=\"text\"\n                variant=\"outlined\"\n                autocomplete=\"one-time-code\"\n              />\n              <InputError class=\"mt-2\" :message=\"form.errors.recovery_code\" />\n            </div>\n          </form>\n        </VCardText>\n        \n        <VCardActions class=\"d-flex justify-end\">\n          <VBtn variant=\"text\" @click.prevent=\"toggleRecovery\">\n            <template v-if=\"!recovery\">Use a recovery code</template>\n            <template v-else>Use an authentication code</template>\n          </VBtn>\n          <VSpacer />\n          <VBtn color=\"primary\" variant=\"elevated\" :loading=\"form.processing\" @click=\"submit\">\n            Log in\n          </VBtn>\n        </VCardActions>\n      </VCard>\n    </AuthLayout>\n  </GuestLayout>\n</template>\n"],"names":["useForm","router","Ref","Head","_resolveComponent","_openBlock","_createBlock","_withCtx","_createVNode","_component_VCard","recovery","_createElementBlock","_Fragment","_component_VCardText","_createElementVNode","_withModifiers","_component_VLabel","_createTextVNode","_component_VTextField","form","_component_VCardActions","_component_VBtn","toggleRecovery","_component_VSpacer","submit"],"mappings":"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"}