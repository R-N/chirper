{"version":3,"file":"ResetPassword-afk945qy.js","sources":["../../../resources/js/modules/user/auth/pages/ResetPassword.vue","../../../resources/js/modules/user/auth/pages/ResetPassword.vue"],"sourcesContent":["<script lang=\"ts\">\nimport InputError from '@/components/auth/InputError.vue';\nimport { Head, useForm } from '@inertiajs/vue3';\n\nimport { VCard, VCardTitle, VCardText, VCardActions, VTextField, VBtn } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative } from 'vue-facing-decorator';\nimport authService from '@/modules/user/auth/services/auth.js'; \nimport { router } from '@inertiajs/vue3';\nimport AuthLayout from '../layouts/Auth.vue';\nimport GuestLayout from '@/layouts/GuestLayout.vue';\n\n@Component({\n  components: {\n    AuthLayout,\n    GuestLayout,\n    InputError,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VCardActions,\n    VTextField,\n    VBtn,\n  }\n})\nclass ResetPasswordPage extends Vue {\n  @Prop({ type: String }) email;\n  @Prop({ type: String }) token;\n\n  form = useForm({\n    token: '',\n    email: '',\n    password: '',\n    password_confirmation: '',\n  });\n\n  mounted(){\n    this.form.token = this.token;\n    this.form.email = this.email;\n  }\n\n  async submit() {\n    let res = await authService.resetPassword(this.form);\n    this.form.reset('password', 'password_confirmation');\n    router.visit(res.redirect || \"/login\");\n  }\n}\nexport default toNative(ResetPasswordPage);\n</script>\n\n<template>\n  <GuestLayout title=\"Reset Password\">\n    <AuthLayout>\n      <VCard class=\"mx-auto my-10\" max-width=\"400\" elevation=\"10\">\n        <VCardText>\n          <VTextField id=\"email\" v-model=\"form.email\" label=\"Email\" type=\"email\" required autofocus autocomplete=\"username\" />\n          <InputError :message=\"form.errors.email\" class=\"mt-2\" />\n\n          <VTextField id=\"password\" v-model=\"form.password\" label=\"Password\" type=\"password\" required autocomplete=\"new-password\" class=\"mt-4\" />\n          <InputError :message=\"form.errors.password\" class=\"mt-2\" />\n\n          <VTextField id=\"password_confirmation\" v-model=\"form.password_confirmation\" label=\"Confirm Password\" type=\"password\" required autocomplete=\"new-password\" class=\"mt-4\" />\n          <InputError :message=\"form.errors.password_confirmation\" class=\"mt-2\" />\n        </VCardText>\n        <VCardActions class=\"justify-end\">\n          <VBtn color=\"primary\" variant=\"elevated\" :loading=\"form.processing\" @click=\"submit\">\n            Reset Password\n          </VBtn>\n        </VCardActions>\n      </VCard>\n    </AuthLayout>\n  </GuestLayout>\n</template>\n","<script lang=\"ts\">\nimport InputError from '@/components/auth/InputError.vue';\nimport { Head, useForm } from '@inertiajs/vue3';\n\nimport { VCard, VCardTitle, VCardText, VCardActions, VTextField, VBtn } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative } from 'vue-facing-decorator';\nimport authService from '@/modules/user/auth/services/auth.js'; \nimport { router } from '@inertiajs/vue3';\nimport AuthLayout from '../layouts/Auth.vue';\nimport GuestLayout from '@/layouts/GuestLayout.vue';\n\n@Component({\n  components: {\n    AuthLayout,\n    GuestLayout,\n    InputError,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VCardActions,\n    VTextField,\n    VBtn,\n  }\n})\nclass ResetPasswordPage extends Vue {\n  @Prop({ type: String }) email;\n  @Prop({ type: String }) token;\n\n  form = useForm({\n    token: '',\n    email: '',\n    password: '',\n    password_confirmation: '',\n  });\n\n  mounted(){\n    this.form.token = this.token;\n    this.form.email = this.email;\n  }\n\n  async submit() {\n    let res = await authService.resetPassword(this.form);\n    this.form.reset('password', 'password_confirmation');\n    router.visit(res.redirect || \"/login\");\n  }\n}\nexport default toNative(ResetPasswordPage);\n</script>\n\n<template>\n  <GuestLayout title=\"Reset Password\">\n    <AuthLayout>\n      <VCard class=\"mx-auto my-10\" max-width=\"400\" elevation=\"10\">\n        <VCardText>\n          <VTextField id=\"email\" v-model=\"form.email\" label=\"Email\" type=\"email\" required autofocus autocomplete=\"username\" />\n          <InputError :message=\"form.errors.email\" class=\"mt-2\" />\n\n          <VTextField id=\"password\" v-model=\"form.password\" label=\"Password\" type=\"password\" required autocomplete=\"new-password\" class=\"mt-4\" />\n          <InputError :message=\"form.errors.password\" class=\"mt-2\" />\n\n          <VTextField id=\"password_confirmation\" v-model=\"form.password_confirmation\" label=\"Confirm Password\" type=\"password\" required autocomplete=\"new-password\" class=\"mt-4\" />\n          <InputError :message=\"form.errors.password_confirmation\" class=\"mt-2\" />\n        </VCardText>\n        <VCardActions class=\"justify-end\">\n          <VBtn color=\"primary\" variant=\"elevated\" :loading=\"form.processing\" @click=\"submit\">\n            Reset Password\n          </VBtn>\n        </VCardActions>\n      </VCard>\n    </AuthLayout>\n  </GuestLayout>\n</template>\n"],"names":["useForm","router","Prop","_resolveComponent","_openBlock","_createBlock","_withCtx","_createVNode","_component_VCard","_component_VCardText","_component_VTextField","form","_component_VCardActions","_component_VBtn","submit","_createTextVNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAM,oBAAN,cAAgC,IAAI;AAAA,EAApC;AAAA;AAC0B;AACA;AAExB,gCAAOA,EAAQ;AAAA,MACb,OAAO;AAAA,MACP,OAAO;AAAA,MACP,UAAU;AAAA,MACV,uBAAuB;AAAA,IAAA,CACxB;AAAA;AAAA,EAED,UAAS;AACF,SAAA,KAAK,QAAQ,KAAK;AAClB,SAAA,KAAK,QAAQ,KAAK;AAAA,EAAA;AAAA,EAGzB,MAAM,SAAS;AACb,QAAI,MAAM,MAAM,YAAY,cAAc,KAAK,IAAI;AAC9C,SAAA,KAAK,MAAM,YAAY,uBAAuB;AAC5CC,OAAA,MAAM,IAAI,YAAY,QAAQ;AAAA,EAAA;AAEzC;AApB0B,gBAAA;AAAA,EAAvBC,UAAK,EAAE,MAAM,OAAQ,CAAA;AAAA,GADlB,kBACoB,WAAA,SAAA,CAAA;AACA,gBAAA;AAAA,EAAvBA,UAAK,EAAE,MAAM,OAAQ,CAAA;AAAA,GAFlB,kBAEoB,WAAA,SAAA,CAAA;AAFpB,oBAAN,gBAAA;AAAA,EAbC,UAAU;AAAA,IACT,YAAY;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAEH,CAAA;AAAA,GACK,iBAAA;AAsBN,MAAe,YAAA,SAAS,iBAAiB;;;;ACIvC,QAAA,yBAAAC,iBAoBc,aApBD;SACXC,UAkBa,GAAAC,YAAA,wBAAA,EAAA,OAAA,oBAAA;AAAA,IAAA,SArEjBC,QAoEc,MAAA;AAAA,MAAAC,YAhBR,uBAgBQ,MAAA;AAAA,QAAA,SAhBID,QAAC,MAAA;AAAA,UAAAC,YAAyBC,OAAM;AAAA,YAAC,OAAA;AAAA,YAAA,aAAA;AAAA,YApDnD,WAAA;AAAA,UAAA,GAAA;AAAA,qBAAAF,QAsD8H,MAAA;AAAA,cAAAC,YAApHE,WAAoH,MAAA;AAAA,gBAAA,SAArGH,QAAO,MAAA;AAAA,kBAAAC,YAtDhCG,YAsDoD;AAAA,oBAtDpD,IAAA;AAAA,oBAsDsD,YAAM,KAAO,KAAA;AAAA,oBAAC,uBAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,KAAA,QAAA;AAAA,oBAAC,OAAA;AAAA,oBAAS,MAAA;AAAA,oBAAU,UAAA;AAAA,oBAAA,WAAA;AAAA,oBAC1F,cAAwD;AAAA,kBAA3C,GAAA,MAAO,GAAEC,CAAK,YAAA,CAAA;AAAA,kBAAAJ,YAAoB,uBAAM;AAAA,oBAAA,SAAA,KAAA,KAAA,OAAA;AAAA,oBAErD,OAAA;AAAA,kBAAA,GAAY,MAAG,GAAU,CAAA,SAAA,CAAA;AAAA,kBAAAA,YAzDnCG,YAyD0D;AAAA,oBAzD1D,IAAA;AAAA,oBAyD4D,YAAM,KAAU,KAAA;AAAA,oBAAC,uBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,KAAA,WAAA;AAAA,oBAAC,OAAA;AAAA,oBAAS,MAAA;AAAA,oBAA4B,UAAM;AAAA,oBAAA,cAAA;AAAA,oBAC9H,OAAA;AAAA,kBAAa,GAAA,MAAO,GAAEC,CAAK,YAAA,CAAA;AAAA,kBAAAJ,YAAuB,uBAAM;AAAA,oBAAA,SAAA,KAAA,KAAA,OAAA;AAAA,oBAExD,OAAA;AAAA,kBAAA,GAAY,MAAG,GAAA,CAAA,SAAA,CAAA;AAAA,kBAAAA,YA5DzBG,YA4D+D;AAAA,oBA5D/D,IAAA;AAAA,oBA4DsF,YAAM,KAAA,KAAA;AAAA,oBAAmB,uBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,KAAA,wBAAA;AAAA,oBAAC,OAAA;AAAA,oBAAS,MAAA;AAAA,oBAA4B,UAAM;AAAA,oBAAA,cAAA;AAAA,oBAChK,OAAA;AAAA,kBAAa,GAAA,MAAO,GAAEC,CAAK,YAAA,CAAA;AAAA,kBAAAJ,YAAoC,uBAAM;AAAA,oBAAA,SAAA,KAAA,KAAA,OAAA;AAAA;kBA7D/E,GAAA,MAAA,GAAA,CAAA,SAAA,CAAA;AAAA,gBAAA,CAAA;AAAA,gBA+DQ,GAAA;AAAA,cAAA,CAAA;AAAA,0BACEK,cAEO,EAAA,OAAA,cAAA,GAAA;AAAA,gBAAA,SAFIN,QAAC,MAAS;AAAA,kBAAAC,YAASM,MAAU;AAAA,oBAAE,OAAO;AAAA,oBAAoB,SAAOC;AAAAA,oBAAAA,SAAAA,KAAAA,KAAAA;AAAAA,oBAhEtF,SAAA,KAAA;AAAA,kBAAA,GAAA;AAAA;sBAAAC,gBAAA,kBAAA;AAAA,oBAAA,EAAA;AAAA;kBAAA,GAAA,GAAA,CAAA,WAAA,SAAA,CAAA;AAAA,gBAAA,CAAA;AAAA;cAAA,CAAA;AAAA,YAAA,CAAA;AAAA;UAAA,CAAA;AAAA,QAAA,CAAA;AAAA;MAAA,CAAA;AAAA,IAAA,CAAA;AAAA;;;;"}