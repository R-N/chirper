{"version":3,"file":"Index-sf-rdXni.js","sources":["../../../node_modules/vuetify/lib/components/VSnackbar/VSnackbar.mjs","../../../resources/js/modules/user/api/views/ApiTokenManager.vue","../../../resources/js/modules/user/api/views/ApiTokenManager.vue"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VSnackbar.css\";\n\n// Components\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VOverlay } from \"../VOverlay/index.mjs\";\nimport { makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\";\nimport { VProgressLinear } from \"../VProgressLinear/index.mjs\"; // Composables\nimport { useLayout } from \"../../composables/index.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { VuetifyLayoutKey } from \"../../composables/layout.mjs\";\nimport { makeLocationProps } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useToggleScope } from \"../../composables/toggleScope.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\"; // Utilities\nimport { computed, inject, mergeProps, nextTick, onMounted, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue';\nimport { genericComponent, omit, propsFactory, refElement, useRender } from \"../../util/index.mjs\"; // Types\nfunction useCountdown(milliseconds) {\n  const time = shallowRef(milliseconds());\n  let timer = -1;\n  function clear() {\n    clearInterval(timer);\n  }\n  function reset() {\n    clear();\n    nextTick(() => time.value = milliseconds());\n  }\n  function start(el) {\n    const style = el ? getComputedStyle(el) : {\n      transitionDuration: 0.2\n    };\n    const interval = parseFloat(style.transitionDuration) * 1000 || 200;\n    clear();\n    if (time.value <= 0) return;\n    const startTime = performance.now();\n    timer = window.setInterval(() => {\n      const elapsed = performance.now() - startTime + interval;\n      time.value = Math.max(milliseconds() - elapsed, 0);\n      if (time.value <= 0) clear();\n    }, interval);\n  }\n  onScopeDispose(clear);\n  return {\n    clear,\n    time,\n    start,\n    reset\n  };\n}\nexport const makeVSnackbarProps = propsFactory({\n  multiLine: Boolean,\n  text: String,\n  timer: [Boolean, String],\n  timeout: {\n    type: [Number, String],\n    default: 5000\n  },\n  vertical: Boolean,\n  ...makeLocationProps({\n    location: 'bottom'\n  }),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeVariantProps(),\n  ...makeThemeProps(),\n  ...omit(makeVOverlayProps({\n    transition: 'v-snackbar-transition'\n  }), ['persistent', 'noClickAnimation', 'scrim', 'scrollStrategy'])\n}, 'VSnackbar');\nexport const VSnackbar = genericComponent()({\n  name: 'VSnackbar',\n  props: makeVSnackbarProps(),\n  emits: {\n    'update:modelValue': v => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      scopeId\n    } = useScopeId();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const countdown = useCountdown(() => Number(props.timeout));\n    const overlay = ref();\n    const timerRef = ref();\n    const isHovering = shallowRef(false);\n    const startY = shallowRef(0);\n    const mainStyles = ref();\n    const hasLayout = inject(VuetifyLayoutKey, undefined);\n    useToggleScope(() => !!hasLayout, () => {\n      const layout = useLayout();\n      watchEffect(() => {\n        mainStyles.value = layout.mainStyles.value;\n      });\n    });\n    watch(isActive, startTimeout);\n    watch(() => props.timeout, startTimeout);\n    onMounted(() => {\n      if (isActive.value) startTimeout();\n    });\n    let activeTimeout = -1;\n    function startTimeout() {\n      countdown.reset();\n      window.clearTimeout(activeTimeout);\n      const timeout = Number(props.timeout);\n      if (!isActive.value || timeout === -1) return;\n      const element = refElement(timerRef.value);\n      countdown.start(element);\n      activeTimeout = window.setTimeout(() => {\n        isActive.value = false;\n      }, timeout);\n    }\n    function clearTimeout() {\n      countdown.reset();\n      window.clearTimeout(activeTimeout);\n    }\n    function onPointerenter() {\n      isHovering.value = true;\n      clearTimeout();\n    }\n    function onPointerleave() {\n      isHovering.value = false;\n      startTimeout();\n    }\n    function onTouchstart(event) {\n      startY.value = event.touches[0].clientY;\n    }\n    function onTouchend(event) {\n      if (Math.abs(startY.value - event.changedTouches[0].clientY) > 50) {\n        isActive.value = false;\n      }\n    }\n    function onAfterLeave() {\n      if (isHovering.value) onPointerleave();\n    }\n    const locationClasses = computed(() => {\n      return props.location.split(' ').reduce((acc, loc) => {\n        acc[`v-snackbar--${loc}`] = true;\n        return acc;\n      }, {});\n    });\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props);\n      const hasContent = !!(slots.default || slots.text || props.text);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-snackbar', {\n          'v-snackbar--active': isActive.value,\n          'v-snackbar--multi-line': props.multiLine && !props.vertical,\n          'v-snackbar--timer': !!props.timer,\n          'v-snackbar--vertical': props.vertical\n        }, locationClasses.value, positionClasses.value, props.class],\n        \"style\": [mainStyles.value, props.style]\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": $event => isActive.value = $event,\n        \"contentProps\": mergeProps({\n          class: ['v-snackbar__wrapper', themeClasses.value, colorClasses.value, roundedClasses.value, variantClasses.value],\n          style: [colorStyles.value],\n          onPointerenter,\n          onPointerleave\n        }, overlayProps.contentProps),\n        \"persistent\": true,\n        \"noClickAnimation\": true,\n        \"scrim\": false,\n        \"scrollStrategy\": \"none\",\n        \"_disableGlobalStack\": true,\n        \"onTouchstartPassive\": onTouchstart,\n        \"onTouchend\": onTouchend,\n        \"onAfterLeave\": onAfterLeave\n      }, scopeId), {\n        default: () => [genOverlays(false, 'v-snackbar'), props.timer && !isHovering.value && _createVNode(\"div\", {\n          \"key\": \"timer\",\n          \"class\": \"v-snackbar__timer\"\n        }, [_createVNode(VProgressLinear, {\n          \"ref\": timerRef,\n          \"color\": typeof props.timer === 'string' ? props.timer : 'info',\n          \"max\": props.timeout,\n          \"model-value\": countdown.time.value\n        }, null)]), hasContent && _createVNode(\"div\", {\n          \"key\": \"content\",\n          \"class\": \"v-snackbar__content\",\n          \"role\": \"status\",\n          \"aria-live\": \"polite\"\n        }, [slots.text?.() ?? props.text, slots.default?.()]), slots.actions && _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VBtn: {\n              variant: 'text',\n              ripple: false,\n              slim: true\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-snackbar__actions\"\n          }, [slots.actions({\n            isActive\n          })])]\n        })],\n        activator: slots.activator\n      });\n    });\n    return forwardRefs({}, overlay);\n  }\n});\n//# sourceMappingURL=VSnackbar.mjs.map","<script lang=\"ts\">\nimport { useForm, router } from '@inertiajs/vue3';\nimport ActionMessage from '@/components/auth/ActionMessage.vue';\nimport ActionSection from '@/components/auth/ActionSection.vue';\nimport FormSection from '@/components/auth/FormSection.vue';\nimport InputError from '@/components/auth/InputError.vue';\nimport InputLabel from '@/components/auth/InputLabel.vue';\nimport { VCard, VCardTitle, VCardText, VCardActions, VTextField, VCheckbox, VBtn, VDialog, VRow, VCol, VSnackbar } from 'vuetify/components';\nimport axios from '@/plugins/axios'; \nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\n\n@Component({\n  components: {\n    ActionMessage,\n    ActionSection, \n    FormSection,\n    InputError, \n    VCard, \n    VCardTitle, \n    VCardText, \n    VCardActions, \n    VDialog, \n    VCheckbox, \n    VBtn, \n    VTextField, \n    VRow, \n    VCol,\n    VSnackbar\n  }\n})\nclass ApiTokenManagerPage extends Vue {\n    @Prop({ type: Array }) tokens;\n    @Prop({ type: Array }) availablePermissions;\n    @Prop({ type: Array }) defaultPermissions;\n\n    createApiTokenForm = useForm({\n        name: '',\n        permissions: [],\n    });\n\n    updateApiTokenForm = useForm({\n        permissions: [],\n    });\n\n    deleteApiTokenForm = useForm({});\n\n    displayingToken = false;\n    managingPermissionsFor = null;\n    apiTokenBeingDeleted = null;\n\n    mounted(){\n        this.createApiTokenForm.permissions = this.defaultPermissions;\n    }\n\n    async createApiToken(){\n        this.createApiTokenForm.post(route('api-tokens.store'), {\n            preserveScroll: true,\n            onSuccess: () => {\n                this.displayingToken = true;\n                this.createApiTokenForm.reset();\n            },\n        });\n        // let res = await axios.post(route('api-tokens.store'), this.createApiTokenForm);\n        // console.log(res);\n        // this.displayingToken = true;\n        // this.createApiTokenForm.reset();\n    };\n\n    manageApiTokenPermissions(token){\n        this.updateApiTokenForm.permissions = token.abilities;\n        this.managingPermissionsFor = token;\n    };\n\n    async updateApiToken(){\n        this.updateApiTokenForm.put(route('api-tokens.update', this.managingPermissionsFor), {\n            preserveScroll: true,\n            preserveState: true,\n            onSuccess: () => (this.managingPermissionsFor = null),\n        });\n        // let res = await axios.put(route('api-tokens.update'), this.updateApiTokenForm);\n        // this.managingPermissionsFor = null;\n    };\n\n    confirmApiTokenDeletion(token){\n        this.apiTokenBeingDeleted = token;\n    };\n\n    async deleteApiToken(){\n        // deleteApiTokenForm.delete(route('api-tokens.destroy', apiTokenBeingDeleted.value), {\n        //     preserveScroll: true,\n        //     preserveState: true,\n        //     onSuccess: () => (apiTokenBeingDeleted.value = null),\n        // });\n        let res = await axios.delete(route('api-tokens.destroy', this.apiTokenBeingDeleted.id), { \n            data: this.deleteApiTokenForm,\n        });\n        this.apiTokenBeingDeleted = null;\n        router.reload({ preserveScroll: true, preserveState: true });\n    };\n    get isManagingPermissions() {\n      return this.managingPermissionsFor != null;\n    }\n}\nexport default toNative(ApiTokenManagerPage);\n</script>\n\n<template>\n    <div>\n        <!-- Generate API Token -->\n        <FormSection @submitted=\"createApiToken\">\n            <template #title>\n                Create API Token\n            </template>\n\n            <template #description>\n                API tokens allow third-party services to authenticate with our application on your behalf.\n            </template>\n\n            <template #form>\n                <!-- Token Name -->\n                <VRow>\n                    <VCol cols=\"12\" md=\"6\">\n                    <VTextField\n                        id=\"name\"\n                        v-model=\"createApiTokenForm.name\"\n                        label=\"Name\"\n                        autofocus\n                        outlined\n                        dense\n                    />\n                    <InputError :message=\"createApiTokenForm.errors.name\" class=\"mt-2\" />\n                    </VCol>\n                </VRow>\n\n                <!-- Token Permissions -->\n                <VRow v-if=\"availablePermissions.length > 0\">\n                    <VCol cols=\"12\">\n                        <InputLabel for=\"permissions\" value=\"Permissions\" />\n                        <VRow class=\"mt-2\">\n                            <VCol\n                            v-for=\"permission in availablePermissions\"\n                            :key=\"permission\"\n                            cols=\"12\"\n                            md=\"6\"\n                            >\n                            <VCheckbox\n                                v-model=\"createApiTokenForm.permissions\"\n                                :value=\"permission\"\n                                :label=\"permission\"\n                            />\n                            </VCol>\n                        </VRow>\n                    </VCol>\n                </VRow>\n            </template>\n\n\n            <template #actions>\n                <ActionMessage :on=\"createApiTokenForm.recentlySuccessful\" class=\"me-3\">\n                    Created.\n                </ActionMessage>\n\n                <VBtn \n                    color=\"primary\" \n                    :loading=\"createApiTokenForm.processing\"\n                    elevation=\"2\"\n                    type=\"submit\"\n                >\n                    Create\n                </VBtn>\n            </template>\n        </FormSection>\n        <!-- Manage API Tokens -->\n        <div v-if=\"tokens.length > 0\">\n            <ActionSection>\n                <template #title>\n                Manage API Tokens\n                </template>\n\n                <template #description>\n                You may delete any of your existing tokens if they are no longer needed.\n                </template>\n\n                <template #content>\n                <VList>\n                    <VListItem v-for=\"token in tokens\" :key=\"token.id\">\n                    <VListItemTitle>{{ token.name }}</VListItemTitle>\n                    <template v-slot:append>\n                        <div class=\"d-flex align-center\">\n                        <span v-if=\"token.last_used_ago\" class=\"text-grey-darken-1 text-caption\">\n                            Last used {{ token.last_used_ago }}\n                        </span>\n                        <VBtn v-if=\"availablePermissions.length > 0\" text class=\"ms-4\" @click=\"manageApiTokenPermissions(token)\">\n                            Permissions\n                        </VBtn>\n                        <VBtn text color=\"red\" class=\"ms-4\" @click=\"confirmApiTokenDeletion(token)\">\n                            Delete\n                        </VBtn>\n                        </div>\n                    </template>\n                    </VListItem>\n                </VList>\n                </template>\n            </ActionSection>\n        </div>\n        <!-- Token Value Modal -->\n        <VDialog v-model=\"displayingToken\" max-width=\"500\">\n            <VCard>\n            <VCardTitle>API Token</VCardTitle>\n\n            <VCardText>\n                <p>Please copy your new API token. For your security, it won't be shown again.</p>\n\n                <VAlert\n                v-if=\"$page.props.jetstream.flash.token\"\n                class=\"mt-4\"\n                density=\"compact\"\n                variant=\"tonal\"\n                type=\"info\"\n                >\n                <span class=\"font-mono text-sm break-all\">\n                    {{ $page.props.jetstream.flash.token }}\n                </span>\n                </VAlert>\n            </VCardText>\n\n            <VCardActions>\n                <VSpacer />\n                <VBtn variant=\"outlined\" @click=\"displayingToken = false\">Close</VBtn>\n            </VCardActions>\n            </VCard>\n        </VDialog>\n\n        <!-- API Token Permissions Modal -->\n        <VDialog v-model=\"isManagingPermissions\" persistent max-width=\"500px\">\n            <VCard>\n                <VCardTitle>\n                    API Token Permissions\n                </VCardTitle>\n\n                <VCardText>\n                    <VContainer>\n                        <VRow>\n                            <VCol v-for=\"permission in availablePermissions\" :key=\"permission\" cols=\"12\" md=\"6\">\n                            <VCheckbox v-model=\"updateApiTokenForm.permissions\" :label=\"permission\" :value=\"permission\" />\n                            </VCol>\n                        </VRow>\n                    </VContainer>\n                </VCardText>\n\n                <VCardActions>\n                    <VSpacer />\n                    <VBtn variant=\"outlined\" @click=\"managingPermissionsFor=null\">\n                        Cancel\n                    </VBtn>\n                    <VBtn color=\"primary\" :loading=\"updateApiTokenForm.processing\" @click=\"updateApiToken\">\n                        Save\n                    </VBtn>\n                </VCardActions>\n            </VCard>\n        </VDialog>\n\n        <VDialog v-model=\"apiTokenBeingDeleted\" max-width=\"500\">\n            <VCard>\n                <VCardTitle>Delete API Token</VCardTitle>\n                <VCardText>Are you sure you would like to delete this API token?</VCardText>\n                <VCardActions class=\"justify-end\">\n                <VBtn variant=\"outlined\" @click=\"apiTokenBeingDeleted = null\">\n                    Cancel\n                </VBtn>\n                <VBtn\n                    color=\"error\"\n                    class=\"ms-3\"\n                    :loading=\"deleteApiTokenForm.processing\"\n                    @click=\"deleteApiToken\"\n                >\n                    Delete\n                </VBtn>\n                </VCardActions>\n            </VCard>\n        </VDialog>\n    </div>\n</template>\n","<script lang=\"ts\">\nimport { useForm, router } from '@inertiajs/vue3';\nimport ActionMessage from '@/components/auth/ActionMessage.vue';\nimport ActionSection from '@/components/auth/ActionSection.vue';\nimport FormSection from '@/components/auth/FormSection.vue';\nimport InputError from '@/components/auth/InputError.vue';\nimport InputLabel from '@/components/auth/InputLabel.vue';\nimport { VCard, VCardTitle, VCardText, VCardActions, VTextField, VCheckbox, VBtn, VDialog, VRow, VCol, VSnackbar } from 'vuetify/components';\nimport axios from '@/plugins/axios'; \nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\n\n@Component({\n  components: {\n    ActionMessage,\n    ActionSection, \n    FormSection,\n    InputError, \n    VCard, \n    VCardTitle, \n    VCardText, \n    VCardActions, \n    VDialog, \n    VCheckbox, \n    VBtn, \n    VTextField, \n    VRow, \n    VCol,\n    VSnackbar\n  }\n})\nclass ApiTokenManagerPage extends Vue {\n    @Prop({ type: Array }) tokens;\n    @Prop({ type: Array }) availablePermissions;\n    @Prop({ type: Array }) defaultPermissions;\n\n    createApiTokenForm = useForm({\n        name: '',\n        permissions: [],\n    });\n\n    updateApiTokenForm = useForm({\n        permissions: [],\n    });\n\n    deleteApiTokenForm = useForm({});\n\n    displayingToken = false;\n    managingPermissionsFor = null;\n    apiTokenBeingDeleted = null;\n\n    mounted(){\n        this.createApiTokenForm.permissions = this.defaultPermissions;\n    }\n\n    async createApiToken(){\n        this.createApiTokenForm.post(route('api-tokens.store'), {\n            preserveScroll: true,\n            onSuccess: () => {\n                this.displayingToken = true;\n                this.createApiTokenForm.reset();\n            },\n        });\n        // let res = await axios.post(route('api-tokens.store'), this.createApiTokenForm);\n        // console.log(res);\n        // this.displayingToken = true;\n        // this.createApiTokenForm.reset();\n    };\n\n    manageApiTokenPermissions(token){\n        this.updateApiTokenForm.permissions = token.abilities;\n        this.managingPermissionsFor = token;\n    };\n\n    async updateApiToken(){\n        this.updateApiTokenForm.put(route('api-tokens.update', this.managingPermissionsFor), {\n            preserveScroll: true,\n            preserveState: true,\n            onSuccess: () => (this.managingPermissionsFor = null),\n        });\n        // let res = await axios.put(route('api-tokens.update'), this.updateApiTokenForm);\n        // this.managingPermissionsFor = null;\n    };\n\n    confirmApiTokenDeletion(token){\n        this.apiTokenBeingDeleted = token;\n    };\n\n    async deleteApiToken(){\n        // deleteApiTokenForm.delete(route('api-tokens.destroy', apiTokenBeingDeleted.value), {\n        //     preserveScroll: true,\n        //     preserveState: true,\n        //     onSuccess: () => (apiTokenBeingDeleted.value = null),\n        // });\n        let res = await axios.delete(route('api-tokens.destroy', this.apiTokenBeingDeleted.id), { \n            data: this.deleteApiTokenForm,\n        });\n        this.apiTokenBeingDeleted = null;\n        router.reload({ preserveScroll: true, preserveState: true });\n    };\n    get isManagingPermissions() {\n      return this.managingPermissionsFor != null;\n    }\n}\nexport default toNative(ApiTokenManagerPage);\n</script>\n\n<template>\n    <div>\n        <!-- Generate API Token -->\n        <FormSection @submitted=\"createApiToken\">\n            <template #title>\n                Create API Token\n            </template>\n\n            <template #description>\n                API tokens allow third-party services to authenticate with our application on your behalf.\n            </template>\n\n            <template #form>\n                <!-- Token Name -->\n                <VRow>\n                    <VCol cols=\"12\" md=\"6\">\n                    <VTextField\n                        id=\"name\"\n                        v-model=\"createApiTokenForm.name\"\n                        label=\"Name\"\n                        autofocus\n                        outlined\n                        dense\n                    />\n                    <InputError :message=\"createApiTokenForm.errors.name\" class=\"mt-2\" />\n                    </VCol>\n                </VRow>\n\n                <!-- Token Permissions -->\n                <VRow v-if=\"availablePermissions.length > 0\">\n                    <VCol cols=\"12\">\n                        <InputLabel for=\"permissions\" value=\"Permissions\" />\n                        <VRow class=\"mt-2\">\n                            <VCol\n                            v-for=\"permission in availablePermissions\"\n                            :key=\"permission\"\n                            cols=\"12\"\n                            md=\"6\"\n                            >\n                            <VCheckbox\n                                v-model=\"createApiTokenForm.permissions\"\n                                :value=\"permission\"\n                                :label=\"permission\"\n                            />\n                            </VCol>\n                        </VRow>\n                    </VCol>\n                </VRow>\n            </template>\n\n\n            <template #actions>\n                <ActionMessage :on=\"createApiTokenForm.recentlySuccessful\" class=\"me-3\">\n                    Created.\n                </ActionMessage>\n\n                <VBtn \n                    color=\"primary\" \n                    :loading=\"createApiTokenForm.processing\"\n                    elevation=\"2\"\n                    type=\"submit\"\n                >\n                    Create\n                </VBtn>\n            </template>\n        </FormSection>\n        <!-- Manage API Tokens -->\n        <div v-if=\"tokens.length > 0\">\n            <ActionSection>\n                <template #title>\n                Manage API Tokens\n                </template>\n\n                <template #description>\n                You may delete any of your existing tokens if they are no longer needed.\n                </template>\n\n                <template #content>\n                <VList>\n                    <VListItem v-for=\"token in tokens\" :key=\"token.id\">\n                    <VListItemTitle>{{ token.name }}</VListItemTitle>\n                    <template v-slot:append>\n                        <div class=\"d-flex align-center\">\n                        <span v-if=\"token.last_used_ago\" class=\"text-grey-darken-1 text-caption\">\n                            Last used {{ token.last_used_ago }}\n                        </span>\n                        <VBtn v-if=\"availablePermissions.length > 0\" text class=\"ms-4\" @click=\"manageApiTokenPermissions(token)\">\n                            Permissions\n                        </VBtn>\n                        <VBtn text color=\"red\" class=\"ms-4\" @click=\"confirmApiTokenDeletion(token)\">\n                            Delete\n                        </VBtn>\n                        </div>\n                    </template>\n                    </VListItem>\n                </VList>\n                </template>\n            </ActionSection>\n        </div>\n        <!-- Token Value Modal -->\n        <VDialog v-model=\"displayingToken\" max-width=\"500\">\n            <VCard>\n            <VCardTitle>API Token</VCardTitle>\n\n            <VCardText>\n                <p>Please copy your new API token. For your security, it won't be shown again.</p>\n\n                <VAlert\n                v-if=\"$page.props.jetstream.flash.token\"\n                class=\"mt-4\"\n                density=\"compact\"\n                variant=\"tonal\"\n                type=\"info\"\n                >\n                <span class=\"font-mono text-sm break-all\">\n                    {{ $page.props.jetstream.flash.token }}\n                </span>\n                </VAlert>\n            </VCardText>\n\n            <VCardActions>\n                <VSpacer />\n                <VBtn variant=\"outlined\" @click=\"displayingToken = false\">Close</VBtn>\n            </VCardActions>\n            </VCard>\n        </VDialog>\n\n        <!-- API Token Permissions Modal -->\n        <VDialog v-model=\"isManagingPermissions\" persistent max-width=\"500px\">\n            <VCard>\n                <VCardTitle>\n                    API Token Permissions\n                </VCardTitle>\n\n                <VCardText>\n                    <VContainer>\n                        <VRow>\n                            <VCol v-for=\"permission in availablePermissions\" :key=\"permission\" cols=\"12\" md=\"6\">\n                            <VCheckbox v-model=\"updateApiTokenForm.permissions\" :label=\"permission\" :value=\"permission\" />\n                            </VCol>\n                        </VRow>\n                    </VContainer>\n                </VCardText>\n\n                <VCardActions>\n                    <VSpacer />\n                    <VBtn variant=\"outlined\" @click=\"managingPermissionsFor=null\">\n                        Cancel\n                    </VBtn>\n                    <VBtn color=\"primary\" :loading=\"updateApiTokenForm.processing\" @click=\"updateApiToken\">\n                        Save\n                    </VBtn>\n                </VCardActions>\n            </VCard>\n        </VDialog>\n\n        <VDialog v-model=\"apiTokenBeingDeleted\" max-width=\"500\">\n            <VCard>\n                <VCardTitle>Delete API Token</VCardTitle>\n                <VCardText>Are you sure you would like to delete this API token?</VCardText>\n                <VCardActions class=\"justify-end\">\n                <VBtn variant=\"outlined\" @click=\"apiTokenBeingDeleted = null\">\n                    Cancel\n                </VBtn>\n                <VBtn\n                    color=\"error\"\n                    class=\"ms-3\"\n                    :loading=\"deleteApiTokenForm.processing\"\n                    @click=\"deleteApiToken\"\n                >\n                    Delete\n                </VBtn>\n                </VCardActions>\n            </VCard>\n        </VDialog>\n    </div>\n</template>\n"],"names":["_createVNode","_mergeProps","useForm","axios","router","Prop","_openBlock","_createElementBlock","_withCtx","_createTextVNode","_component_VRow","_component_VCol","_component_VTextField","createApiTokenForm","availablePermissions","_createBlock","_Fragment","_renderList","_component_VCheckbox","_createCommentVNode","tokens","_hoisted_1","_component_VList","_createElementVNode","_toDisplayString","_component_VBtn","_component_VListItemTitle","displayingToken","_component_VDialog","_component_VCard","_component_VCardTitle","_component_VCardText","$page","_component_VAlert","_component_VCardActions","_component_VSpacer","isManagingPermissions","_component_VContainer","updateApiTokenForm","apiTokenBeingDeleted"],"mappings":"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","x_google_ignoreList":[0]}