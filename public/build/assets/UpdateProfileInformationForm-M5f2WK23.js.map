{"version":3,"file":"UpdateProfileInformationForm-M5f2WK23.js","sources":["../../../node_modules/vuetify/lib/components/VFileInput/VFileInput.mjs","../../../resources/js/modules/user/profile/services/profile.js","../../../resources/js/modules/user/profile/views/DeleteUserForm.vue","../../../resources/js/modules/user/profile/views/DeleteUserForm.vue","../../../resources/js/modules/user/profile/views/UpdatePasswordForm.vue","../../../resources/js/modules/user/profile/views/UpdatePasswordForm.vue","../../../resources/js/modules/user/profile/views/UpdateProfileInformationForm.vue","../../../resources/js/modules/user/profile/views/UpdateProfileInformationForm.vue"],"sourcesContent":["import { Fragment as _Fragment, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VFileInput.css\";\n\n// Components\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VCounter } from \"../VCounter/index.mjs\";\nimport { VField } from \"../VField/index.mjs\";\nimport { makeVFieldProps } from \"../VField/VField.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\"; // Composables\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, nextTick, ref, watch } from 'vue';\nimport { callEvent, filterInputAttrs, genericComponent, humanReadableFileSize, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeVFileInputProps = propsFactory({\n  chips: Boolean,\n  counter: Boolean,\n  counterSizeString: {\n    type: String,\n    default: '$vuetify.fileInput.counterSize'\n  },\n  counterString: {\n    type: String,\n    default: '$vuetify.fileInput.counter'\n  },\n  hideInput: Boolean,\n  multiple: Boolean,\n  showSize: {\n    type: [Boolean, Number, String],\n    default: false,\n    validator: v => {\n      return typeof v === 'boolean' || [1000, 1024].includes(Number(v));\n    }\n  },\n  ...makeVInputProps({\n    prependIcon: '$file'\n  }),\n  modelValue: {\n    type: [Array, Object],\n    default: props => props.multiple ? [] : null,\n    validator: val => {\n      return wrapInArray(val).every(v => v != null && typeof v === 'object');\n    }\n  },\n  ...makeVFieldProps({\n    clearable: true\n  })\n}, 'VFileInput');\nexport const VFileInput = genericComponent()({\n  name: 'VFileInput',\n  inheritAttrs: false,\n  props: makeVFileInputProps(),\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:focused': focused => true,\n    'update:modelValue': files => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const model = useProxiedModel(props, 'modelValue', props.modelValue, val => wrapInArray(val), val => !props.multiple && Array.isArray(val) ? val[0] : val);\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined);\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, _ref2) => {\n      let {\n        size = 0\n      } = _ref2;\n      return bytes + size;\n    }, 0));\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value));\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const {\n        name = '',\n        size = 0\n      } = file;\n      return !props.showSize ? name : `${name} (${humanReadableFileSize(size, base.value)})`;\n    }));\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0;\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value);else return t(props.counterString, fileCount);\n    });\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const inputRef = ref();\n    const isActive = computed(() => isFocused.value || props.active);\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant));\n    function onFocus() {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus();\n      }\n      if (!isFocused.value) focus();\n    }\n    function onClickPrepend(e) {\n      inputRef.value?.click();\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n    function onControlClick(e) {\n      inputRef.value?.click();\n      emit('click:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = [];\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    function onDragover(e) {\n      e.preventDefault();\n    }\n    function onDrop(e) {\n      e.preventDefault();\n      if (!e.dataTransfer) return;\n      model.value = [...(e.dataTransfer.files ?? [])];\n    }\n    watch(model, newValue => {\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length;\n      if (hasModelReset && inputRef.value) {\n        inputRef.value.value = '';\n      }\n    });\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const {\n        modelValue: _,\n        ...inputProps\n      } = VInput.filterProps(props);\n      const fieldProps = VField.filterProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": props.multiple ? model.value : model.value[0],\n        \"class\": ['v-file-input', {\n          'v-file-input--chips': !!props.chips,\n          'v-file-input--hide': props.hideInput,\n          'v-input--plain-underlined': isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style,\n        \"onClick:prepend\": onClickPrepend\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: _ref3 => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref3;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"prepend-icon\": props.prependIcon,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner']\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false,\n            \"onDragover\": onDragover,\n            \"onDrop\": onDrop\n          }), {\n            ...slots,\n            default: _ref4 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref4;\n              return _createVNode(_Fragment, null, [_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"type\": \"file\",\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"multiple\": props.multiple,\n                \"name\": props.name,\n                \"onClick\": e => {\n                  e.stopPropagation();\n                  if (isReadonly.value) e.preventDefault();\n                  onFocus();\n                },\n                \"onChange\": e => {\n                  if (!e.target) return;\n                  const target = e.target;\n                  model.value = [...(target.files ?? [])];\n                },\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), _createVNode(\"div\", {\n                \"class\": fieldClass\n              }, [!!model.value?.length && !props.hideInput && (slots.selection ? slots.selection({\n                fileNames: fileNames.value,\n                totalBytes: totalBytes.value,\n                totalBytesReadable: totalBytesReadable.value\n              }) : props.chips ? fileNames.value.map(text => _createVNode(VChip, {\n                \"key\": text,\n                \"size\": \"small\",\n                \"text\": text\n              }, null)) : fileNames.value.join(', '))])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": !!model.value?.length,\n          \"value\": counterValue.value,\n          \"disabled\": props.disabled\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n});\n//# sourceMappingURL=VFileInput.mjs.map","import { useAuthStore } from '@/stores/auth';\r\nimport _axios from '@/plugins/axios'; \r\n\r\nclass ProfileService{\r\n  constructor(axios) {\r\n    this.axios = axios || _axios;\r\n  }\r\n\r\n  async deleteUser(form) {\r\n    //let target = route('profile.destroy');\r\n    let target = route('current-user.destroy');\r\n    let res = await this.axios.delete(target, { data: form });\r\n    return res.data;\r\n  }\r\n  async logoutOtherBrowserSessions(form){\r\n    let target = route('other-browser-sessions.destroy');\r\n    let res = await this.axios.delete(target, { data: form });\r\n    return res.data;\r\n  };\r\n  async updatePassword(form) {\r\n    // let target = route('password.update');\r\n    // let target = '/user/password';\r\n    let target = route('user-password.update');\r\n    let res = await this.axios.put(target, form);\r\n    return res.data;\r\n  }\r\n  \r\n  async _updateProfileInformation(form) {\r\n    let res = await this.axios.patch(route('profile.update'), form);\r\n    return res.data;\r\n  }\r\n  \r\n  async updateProfileInformation(form, photo=null){\r\n    const formData = new FormData();\r\n    \r\n    formData.append(\"name\", form.name);\r\n    formData.append(\"email\", form.email);\r\n    //formData.append('_method', 'PUT');\r\n    if (photo || form.photo) {\r\n      formData.append(\"photo\", photo || form.photo);\r\n    }\r\n    \r\n    let res = await this.axios.post(route('user-profile-information.update'), formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      params: {\r\n        // Laravel won't process multipart/form-data in a PUT request\r\n        // So we send a POST request but spoof it as PUT\r\n        _method: \"PUT\", \r\n      },\r\n    });\r\n    return res.data;\r\n  };\r\n  async deletePhoto(){\r\n    let res = await this.axios.delete(route('current-user-photo.destroy'));\r\n    return res.data;\r\n  };\r\n  \r\n  async verifyEmail(form) {\r\n    let res = await this.axios.post(route('verification.send'), form);\r\n    return res.data;\r\n  }\r\n}\r\n\r\nconst profileService = new ProfileService();\r\n\r\nexport { ProfileService, profileService };\r\nexport default profileService;\r\n","<script lang=\"ts\">\nimport ActionSection from '@/components/auth/ActionSection.vue';\nimport InputError from '@/components/auth/InputError.vue';\nimport { useForm } from '@inertiajs/vue3';\nimport { nextTick, ref } from 'vue';\n\nimport { VDialog, VTextField, VBtn } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\nimport profileService from '@/modules/user/profile/services/profile.js';\nimport { router } from '@inertiajs/vue3';\n\n@Component({\n  components: {\n    ActionSection,\n    VDialog,\n    VTextField,\n    VBtn,\n    InputError,\n  }\n})\nclass DeleteUserForm extends Vue {\n  confirmingUserDeletion = false;\n  @Ref('passwordInput') passwordInput;\n\n  form = useForm({\n    password: '',\n  });\n\n  confirmUserDeletion(){\n      this.confirmingUserDeletion = true;\n      nextTick(() => this.passwordInput.focus());\n  };\n\n  closeModal(){\n    this.confirmingUserDeletion = false;\n\n    this.form.clearErrors();\n    this.form.reset();\n  };\n\n  async deleteUser() {\n    try{\n        let res = await profileService.deleteUser(this.form);\n        this.closeModal();\n        router.visit(res.redirect || \"/\");\n    } catch (error) {\n        this.passwordInput.focus();\n    } finally {\n        this.form.reset();\n    }\n  }\n}\nexport default toNative(DeleteUserForm);\n</script>\n\n<template>\n    <ActionSection>\n      <template #title>\n        Delete Account\n      </template>\n  \n      <template #description>\n        Permanently delete your account.\n      </template>\n  \n      <template #content>\n        <p class=\"text-sm text-body-1\">\n          Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.\n        </p>\n  \n        <div class=\"mt-5\">\n          <VBtn color=\"error\" variant=\"elevated\" @click=\"confirmUserDeletion\">\n            Delete Account\n          </VBtn>\n        </div>\n  \n        <VDialog v-model=\"confirmingUserDeletion\" max-width=\"500\">\n          <template #default>\n            <div class=\"p-5\">\n              <h2 class=\"text-lg font-bold\">Delete Account</h2>\n              <p class=\"mt-2\">Are you sure you want to delete your account? This action cannot be undone. Please enter your password to confirm.</p>\n              \n              <VTextField\n                ref=\"passwordInput\"\n                v-model=\"form.password\"\n                label=\"Password\"\n                type=\"password\"\n                variant=\"outlined\"\n                class=\"mt-4\"\n                autocomplete=\"current-password\"\n                @keyup.enter=\"deleteUser\"\n              />\n              <InputError :message=\"form.errors.password\" class=\"mt-2\" />\n              \n              <div class=\"mt-4 d-flex justify-end\">\n                <VBtn variant=\"text\" @click=\"closeModal\">Cancel</VBtn>\n                <VBtn color=\"error\" variant=\"elevated\" class=\"ms-3\" :loading=\"loading\" @click=\"deleteUser\">\n                  Delete Account\n                </VBtn>\n              </div>\n            </div>\n          </template>\n        </VDialog>\n      </template>\n    </ActionSection>\n  </template>\n  ","<script lang=\"ts\">\nimport ActionSection from '@/components/auth/ActionSection.vue';\nimport InputError from '@/components/auth/InputError.vue';\nimport { useForm } from '@inertiajs/vue3';\nimport { nextTick, ref } from 'vue';\n\nimport { VDialog, VTextField, VBtn } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\nimport profileService from '@/modules/user/profile/services/profile.js';\nimport { router } from '@inertiajs/vue3';\n\n@Component({\n  components: {\n    ActionSection,\n    VDialog,\n    VTextField,\n    VBtn,\n    InputError,\n  }\n})\nclass DeleteUserForm extends Vue {\n  confirmingUserDeletion = false;\n  @Ref('passwordInput') passwordInput;\n\n  form = useForm({\n    password: '',\n  });\n\n  confirmUserDeletion(){\n      this.confirmingUserDeletion = true;\n      nextTick(() => this.passwordInput.focus());\n  };\n\n  closeModal(){\n    this.confirmingUserDeletion = false;\n\n    this.form.clearErrors();\n    this.form.reset();\n  };\n\n  async deleteUser() {\n    try{\n        let res = await profileService.deleteUser(this.form);\n        this.closeModal();\n        router.visit(res.redirect || \"/\");\n    } catch (error) {\n        this.passwordInput.focus();\n    } finally {\n        this.form.reset();\n    }\n  }\n}\nexport default toNative(DeleteUserForm);\n</script>\n\n<template>\n    <ActionSection>\n      <template #title>\n        Delete Account\n      </template>\n  \n      <template #description>\n        Permanently delete your account.\n      </template>\n  \n      <template #content>\n        <p class=\"text-sm text-body-1\">\n          Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.\n        </p>\n  \n        <div class=\"mt-5\">\n          <VBtn color=\"error\" variant=\"elevated\" @click=\"confirmUserDeletion\">\n            Delete Account\n          </VBtn>\n        </div>\n  \n        <VDialog v-model=\"confirmingUserDeletion\" max-width=\"500\">\n          <template #default>\n            <div class=\"p-5\">\n              <h2 class=\"text-lg font-bold\">Delete Account</h2>\n              <p class=\"mt-2\">Are you sure you want to delete your account? This action cannot be undone. Please enter your password to confirm.</p>\n              \n              <VTextField\n                ref=\"passwordInput\"\n                v-model=\"form.password\"\n                label=\"Password\"\n                type=\"password\"\n                variant=\"outlined\"\n                class=\"mt-4\"\n                autocomplete=\"current-password\"\n                @keyup.enter=\"deleteUser\"\n              />\n              <InputError :message=\"form.errors.password\" class=\"mt-2\" />\n              \n              <div class=\"mt-4 d-flex justify-end\">\n                <VBtn variant=\"text\" @click=\"closeModal\">Cancel</VBtn>\n                <VBtn color=\"error\" variant=\"elevated\" class=\"ms-3\" :loading=\"loading\" @click=\"deleteUser\">\n                  Delete Account\n                </VBtn>\n              </div>\n            </div>\n          </template>\n        </VDialog>\n      </template>\n    </ActionSection>\n  </template>\n  ","<script lang=\"ts\">\nimport ActionMessage from '@/components/auth/ActionMessage.vue';\nimport FormSection from '@/components/auth/FormSection.vue';\nimport InputError from '@/components/auth/InputError.vue';\nimport { useForm } from '@inertiajs/vue3';\n\nimport { VTextField, VBtn, VRow, VCol } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\nimport profileService from '@/modules/user/profile/services/profile.js';\nimport { router } from '@inertiajs/vue3';\n\n@Component({\n  components: {\n    ActionMessage,\n    FormSection,\n    InputError,\n    VTextField,\n    VBtn,\n    VRow,\n    VCol,\n  }\n})\nclass UpdatePasswordForm extends Vue {\n  @Ref('passwordInput') passwordInput;\n  @Ref('currentPasswordInput') currentPasswordInput;\n\n  form = useForm({\n    current_password: '',\n    password: '',\n    password_confirmation: '',\n  });\n\n  async updatePassword() {\n    try{\n      let res = await profileService.updatePassword(this.form);\n      this.form.reset();\n      router.visit(res.redirect || \"/login\");\n    }catch(error){\n      if (error.response?.status === 422) {\n        this.form.errors = error.response.data.errors;\n      } else {\n        console.error(\"Unexpected error:\", error);\n      }\n      if (this.form.errors.password) {\n        this.form.reset('password', 'password_confirmation');\n        this.passwordInput.focus();\n      }\n      if (this.form.errors.current_password) {\n        this.form.reset('current_password');\n        this.currentPasswordInput.focus();\n      }\n    }\n  }\n}\nexport default toNative(UpdatePasswordForm);\n</script>\n\n<template>\n  <FormSection @submitted=\"updatePassword\">\n    <template #title>\n      Update Password\n    </template>\n\n    <template #description>\n      Ensure your account is using a long, random password to stay secure.\n    </template>\n\n    <template #form>\n      <!-- Current Password -->\n      <VRow>\n        <VCol cols=\"12\">\n          <VTextField\n            id=\"current_password\"\n            ref=\"currentPasswordInput\"\n            v-model=\"form.current_password\"\n            label=\"Current Password\"\n            type=\"password\"\n            autocomplete=\"current-password\"\n          />\n          <InputError :message=\"form.errors.current_password\" class=\"mt-2\" />\n        </VCol>\n      </VRow>\n\n      <!-- New Password -->\n      <VRow>\n        <VCol cols=\"12\">\n          <VTextField\n            id=\"password\"\n            ref=\"passwordInput\"\n            v-model=\"form.password\"\n            label=\"New Password\"\n            type=\"password\"\n            autocomplete=\"new-password\"\n          />\n          <InputError :message=\"form.errors.password\" class=\"mt-2\" />\n        </VCol>\n      </VRow>\n\n      <!-- Confirm Password -->\n      <VRow>\n        <VCol cols=\"12\">\n          <VTextField\n            id=\"password_confirmation\"\n            v-model=\"form.password_confirmation\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            autocomplete=\"new-password\"\n          />\n          <InputError :message=\"form.errors.password_confirmation\" class=\"mt-2\" />\n        </VCol>\n      </VRow>\n    </template>\n\n    <template #actions>\n      <ActionMessage :on=\"form.recentlySuccessful\" class=\"me-3\">\n        Saved.\n      </ActionMessage>\n      \n      <VBtn color=\"primary\" variant=\"elevated\" type=\"submit\" :disabled=\"form.processing\">\n        Save\n      </VBtn>\n    </template>\n  </FormSection>\n</template>\n","<script lang=\"ts\">\nimport ActionMessage from '@/components/auth/ActionMessage.vue';\nimport FormSection from '@/components/auth/FormSection.vue';\nimport InputError from '@/components/auth/InputError.vue';\nimport { useForm } from '@inertiajs/vue3';\n\nimport { VTextField, VBtn, VRow, VCol } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\nimport profileService from '@/modules/user/profile/services/profile.js';\nimport { router } from '@inertiajs/vue3';\n\n@Component({\n  components: {\n    ActionMessage,\n    FormSection,\n    InputError,\n    VTextField,\n    VBtn,\n    VRow,\n    VCol,\n  }\n})\nclass UpdatePasswordForm extends Vue {\n  @Ref('passwordInput') passwordInput;\n  @Ref('currentPasswordInput') currentPasswordInput;\n\n  form = useForm({\n    current_password: '',\n    password: '',\n    password_confirmation: '',\n  });\n\n  async updatePassword() {\n    try{\n      let res = await profileService.updatePassword(this.form);\n      this.form.reset();\n      router.visit(res.redirect || \"/login\");\n    }catch(error){\n      if (error.response?.status === 422) {\n        this.form.errors = error.response.data.errors;\n      } else {\n        console.error(\"Unexpected error:\", error);\n      }\n      if (this.form.errors.password) {\n        this.form.reset('password', 'password_confirmation');\n        this.passwordInput.focus();\n      }\n      if (this.form.errors.current_password) {\n        this.form.reset('current_password');\n        this.currentPasswordInput.focus();\n      }\n    }\n  }\n}\nexport default toNative(UpdatePasswordForm);\n</script>\n\n<template>\n  <FormSection @submitted=\"updatePassword\">\n    <template #title>\n      Update Password\n    </template>\n\n    <template #description>\n      Ensure your account is using a long, random password to stay secure.\n    </template>\n\n    <template #form>\n      <!-- Current Password -->\n      <VRow>\n        <VCol cols=\"12\">\n          <VTextField\n            id=\"current_password\"\n            ref=\"currentPasswordInput\"\n            v-model=\"form.current_password\"\n            label=\"Current Password\"\n            type=\"password\"\n            autocomplete=\"current-password\"\n          />\n          <InputError :message=\"form.errors.current_password\" class=\"mt-2\" />\n        </VCol>\n      </VRow>\n\n      <!-- New Password -->\n      <VRow>\n        <VCol cols=\"12\">\n          <VTextField\n            id=\"password\"\n            ref=\"passwordInput\"\n            v-model=\"form.password\"\n            label=\"New Password\"\n            type=\"password\"\n            autocomplete=\"new-password\"\n          />\n          <InputError :message=\"form.errors.password\" class=\"mt-2\" />\n        </VCol>\n      </VRow>\n\n      <!-- Confirm Password -->\n      <VRow>\n        <VCol cols=\"12\">\n          <VTextField\n            id=\"password_confirmation\"\n            v-model=\"form.password_confirmation\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            autocomplete=\"new-password\"\n          />\n          <InputError :message=\"form.errors.password_confirmation\" class=\"mt-2\" />\n        </VCol>\n      </VRow>\n    </template>\n\n    <template #actions>\n      <ActionMessage :on=\"form.recentlySuccessful\" class=\"me-3\">\n        Saved.\n      </ActionMessage>\n      \n      <VBtn color=\"primary\" variant=\"elevated\" type=\"submit\" :disabled=\"form.processing\">\n        Save\n      </VBtn>\n    </template>\n  </FormSection>\n</template>\n","<script lang=\"ts\">\nimport ActionMessage from '@/components/auth/ActionMessage.vue';\nimport FormSection from '@/components/auth/FormSection.vue';\nimport InputError from '@/components/auth/InputError.vue';\nimport { Link, router, useForm, usePage } from '@inertiajs/vue3';\nimport { VTextField, VFileInput, VBtn, VCard, VImg, VAvatar, VRow, VCol } from 'vuetify/components';\n\nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\nimport profileService from '@/modules/user/profile/services/profile.js';\n\n\n@Component({\n  components: {\n    InputError,\n    ActionMessage,\n    FormSection,\n    VTextField,\n    VFileInput,\n    VBtn,\n    VCard,\n    VImg,\n    VAvatar,\n    VRow,\n    VCol,\n  }\n})\nclass UpdateProfileInformationForm extends Vue {\n//   @Prop({ type: Boolean }) mustVerifyEmail;\n//   @Prop({ type: String }) status;\n  @Prop(Object) user = null;\n\n  form = useForm({\n    _method: 'PUT',\n    name: '',\n    email: '',\n    photo: null,\n  });\n\n  verificationLinkSent = null;\n  photoPreview = null;\n  @Ref('photoInput') photoInput;\n\n  mounted(){\n    // this.user = usePage().props.auth.user;\n    this.form.name = this.user.name;\n    this.form.email = this.user.email;\n  }\n\n  async updateProfileInformation(){\n    if (this.photoInput) {\n      this.form.photo = this.photoInput.files[0];\n    }\n    \n    try{\n      let res = await profileService.updateProfileInformation(this.form, this.photoInput.files[0]);\n      this.clearPhotoFileInput();\n      router.reload({ preserveScroll: true });\n    } catch (error) {\n      if (error.response?.status === 422) {\n        this.form.errors = error.response.data.errors;\n      } else {\n        console.error(\"Unexpected error:\", error);\n      }\n    }\n  };\n\n  sendEmailVerification(){\n    this.verificationLinkSent = true;\n  };\n\n  selectNewPhoto(){\n    this.photoInput.click();\n  };\n\n  async updatePhotoPreview(){\n    const photo = this.photoInput.files[0];\n\n    if (! photo) return;\n\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n        this.photoPreview = e.target.result;\n    };\n\n    return await reader.readAsDataURL(photo);\n  };\n\n  async deletePhoto(){\n    let res = await profileService.deletePhoto();\n    this.photoPreview = null;\n    this.clearPhotoFileInput();\n    router.reload({ preserveScroll: true });\n  };\n\n  clearPhotoFileInput(){\n    if (this.photoInput?.value) {\n      this.photoInput.value = null;\n    }\n  };\n}\nexport default toNative(UpdateProfileInformationForm);\n</script>\n\n<template>\n  <FormSection @submitted=\"updatePassword\">\n    <template #title>\n      Profile Information\n    </template>\n\n    <template #description>\n      Update your account's profile information and email address.\n    </template>\n\n    <template #form>    \n      <VRow>\n        <VCol cols=\"12\" class=\"d-flex flex-column\">\n          <VFileInput\n            id=\"photo\"\n            class=\"d-none\"\n            ref=\"photoInput\"\n            label=\"Photo\"\n            accept=\"image/png, image/jpeg\"\n            @change=\"updatePhotoPreview\"\n          />\n\n          <VAvatar v-if=\"!photoPreview\" :image=\"user.profile_photo_url\" :alt=\"user.name\" size=\"80\" cover />\n          <VAvatar v-if=\"photoPreview\" :image=\"photoPreview\" size=\"80\" />\n\n          <div class=\"mt-2\">\n            <VBtn color=\"secondary\" class=\"me-2\" @click.prevent=\"photoInput?.click()\">\n              Select A New Photo\n            </VBtn>\n            <VBtn color=\"error\" v-if=\"user.profile_photo_path\" @click.prevent=\"deletePhoto\">\n              Remove Photo\n            </VBtn>\n          </div>\n\n          <InputError :message=\"form.errors.photo\" class=\"mt-2\" />\n        </VCol>\n      </VRow>\n\n      <VRow>\n        <VCol cols=\"12\">\n          <VTextField v-model=\"form.name\" label=\"Name\" required autocomplete=\"name\" />\n          <InputError :message=\"form.errors.name\" class=\"mt-2\" />\n        </VCol>\n      </VRow>\n\n      <VRow>\n        <VCol cols=\"12\">\n          <VTextField v-model=\"form.email\" label=\"Email\" required autocomplete=\"username\" type=\"email\" />\n          <InputError :message=\"form.errors.email\" class=\"mt-2\" />\n\n          <div v-if=\"$page.props.jetstream.hasEmailVerification && user.email_verified_at === null\">\n            <p class=\"text-body-2 mt-2\">\n              Your email address is unverified.\n              <VBtn variant=\"text\" @click.prevent=\"verificationLinkSent = true\">Click here to re-send the verification email.</VBtn>\n            </p>\n\n            <div v-show=\"verificationLinkSent\" class=\"mt-2 font-weight-bold text-green\">\n              A new verification link has been sent to your email address.\n            </div>\n          </div>\n        </VCol>\n      </VRow>\n    </template>\n\n    <template #actions>\n      <ActionMessage :on=\"form.recentlySuccessful\" class=\"me-3\">\n        Saved.\n      </ActionMessage>\n      <VBtn color=\"primary\" variant=\"elevated\" type=\"submit\" :loading=\"form.processing\" @click=\"updateProfileInformation\">\n        Save\n      </VBtn>\n    </template>\n  </FormSection>\n</template>\n","<script lang=\"ts\">\nimport ActionMessage from '@/components/auth/ActionMessage.vue';\nimport FormSection from '@/components/auth/FormSection.vue';\nimport InputError from '@/components/auth/InputError.vue';\nimport { Link, router, useForm, usePage } from '@inertiajs/vue3';\nimport { VTextField, VFileInput, VBtn, VCard, VImg, VAvatar, VRow, VCol } from 'vuetify/components';\n\nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\nimport profileService from '@/modules/user/profile/services/profile.js';\n\n\n@Component({\n  components: {\n    InputError,\n    ActionMessage,\n    FormSection,\n    VTextField,\n    VFileInput,\n    VBtn,\n    VCard,\n    VImg,\n    VAvatar,\n    VRow,\n    VCol,\n  }\n})\nclass UpdateProfileInformationForm extends Vue {\n//   @Prop({ type: Boolean }) mustVerifyEmail;\n//   @Prop({ type: String }) status;\n  @Prop(Object) user = null;\n\n  form = useForm({\n    _method: 'PUT',\n    name: '',\n    email: '',\n    photo: null,\n  });\n\n  verificationLinkSent = null;\n  photoPreview = null;\n  @Ref('photoInput') photoInput;\n\n  mounted(){\n    // this.user = usePage().props.auth.user;\n    this.form.name = this.user.name;\n    this.form.email = this.user.email;\n  }\n\n  async updateProfileInformation(){\n    if (this.photoInput) {\n      this.form.photo = this.photoInput.files[0];\n    }\n    \n    try{\n      let res = await profileService.updateProfileInformation(this.form, this.photoInput.files[0]);\n      this.clearPhotoFileInput();\n      router.reload({ preserveScroll: true });\n    } catch (error) {\n      if (error.response?.status === 422) {\n        this.form.errors = error.response.data.errors;\n      } else {\n        console.error(\"Unexpected error:\", error);\n      }\n    }\n  };\n\n  sendEmailVerification(){\n    this.verificationLinkSent = true;\n  };\n\n  selectNewPhoto(){\n    this.photoInput.click();\n  };\n\n  async updatePhotoPreview(){\n    const photo = this.photoInput.files[0];\n\n    if (! photo) return;\n\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n        this.photoPreview = e.target.result;\n    };\n\n    return await reader.readAsDataURL(photo);\n  };\n\n  async deletePhoto(){\n    let res = await profileService.deletePhoto();\n    this.photoPreview = null;\n    this.clearPhotoFileInput();\n    router.reload({ preserveScroll: true });\n  };\n\n  clearPhotoFileInput(){\n    if (this.photoInput?.value) {\n      this.photoInput.value = null;\n    }\n  };\n}\nexport default toNative(UpdateProfileInformationForm);\n</script>\n\n<template>\n  <FormSection @submitted=\"updatePassword\">\n    <template #title>\n      Profile Information\n    </template>\n\n    <template #description>\n      Update your account's profile information and email address.\n    </template>\n\n    <template #form>    \n      <VRow>\n        <VCol cols=\"12\" class=\"d-flex flex-column\">\n          <VFileInput\n            id=\"photo\"\n            class=\"d-none\"\n            ref=\"photoInput\"\n            label=\"Photo\"\n            accept=\"image/png, image/jpeg\"\n            @change=\"updatePhotoPreview\"\n          />\n\n          <VAvatar v-if=\"!photoPreview\" :image=\"user.profile_photo_url\" :alt=\"user.name\" size=\"80\" cover />\n          <VAvatar v-if=\"photoPreview\" :image=\"photoPreview\" size=\"80\" />\n\n          <div class=\"mt-2\">\n            <VBtn color=\"secondary\" class=\"me-2\" @click.prevent=\"photoInput?.click()\">\n              Select A New Photo\n            </VBtn>\n            <VBtn color=\"error\" v-if=\"user.profile_photo_path\" @click.prevent=\"deletePhoto\">\n              Remove Photo\n            </VBtn>\n          </div>\n\n          <InputError :message=\"form.errors.photo\" class=\"mt-2\" />\n        </VCol>\n      </VRow>\n\n      <VRow>\n        <VCol cols=\"12\">\n          <VTextField v-model=\"form.name\" label=\"Name\" required autocomplete=\"name\" />\n          <InputError :message=\"form.errors.name\" class=\"mt-2\" />\n        </VCol>\n      </VRow>\n\n      <VRow>\n        <VCol cols=\"12\">\n          <VTextField v-model=\"form.email\" label=\"Email\" required autocomplete=\"username\" type=\"email\" />\n          <InputError :message=\"form.errors.email\" class=\"mt-2\" />\n\n          <div v-if=\"$page.props.jetstream.hasEmailVerification && user.email_verified_at === null\">\n            <p class=\"text-body-2 mt-2\">\n              Your email address is unverified.\n              <VBtn variant=\"text\" @click.prevent=\"verificationLinkSent = true\">Click here to re-send the verification email.</VBtn>\n            </p>\n\n            <div v-show=\"verificationLinkSent\" class=\"mt-2 font-weight-bold text-green\">\n              A new verification link has been sent to your email address.\n            </div>\n          </div>\n        </VCol>\n      </VRow>\n    </template>\n\n    <template #actions>\n      <ActionMessage :on=\"form.recentlySuccessful\" class=\"me-3\">\n        Saved.\n      </ActionMessage>\n      <VBtn color=\"primary\" variant=\"elevated\" type=\"submit\" :loading=\"form.processing\" @click=\"updateProfileInformation\">\n        Save\n      </VBtn>\n    </template>\n  </FormSection>\n</template>\n"],"names":["_createVNode","_mergeProps","_Fragment","_axios","DeleteUserForm","useForm","router","__decorateClass","Ref","_resolveComponent","_openBlock","_createBlock","_withCtx","_createTextVNode","_createElementVNode","_hoisted_1","_component_VBtn","_component_VDialog","_hoisted_2","_component_VTextField","_withKeys","form","_hoisted_3","closeModal","loading","UpdatePasswordForm","_component_VRow","_component_VCol","UpdateProfileInformationForm","Prop","_component_VFileInput","photoPreview","_component_VAvatar","user","_createCommentVNode","_withModifiers","$page"],"mappings":"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","x_google_ignoreList":[0]}