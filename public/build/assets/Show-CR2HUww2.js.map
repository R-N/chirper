{"version":3,"file":"Show-CR2HUww2.js","sources":["../../../resources/js/modules/user/profile/views/LogoutOtherBrowserSessionsForm.vue","../../../resources/js/modules/user/profile/views/LogoutOtherBrowserSessionsForm.vue","../../../resources/js/components/auth/SectionBorder.vue","../../../resources/js/components/auth/SectionBorder.vue","../../../resources/js/components/auth/ConfirmsPassword.vue","../../../resources/js/components/auth/ConfirmsPassword.vue","../../../resources/js/modules/user/auth/services/twofactor.js","../../../resources/js/modules/user/profile/views/TwoFactorAuthenticationForm.vue","../../../resources/js/modules/user/profile/views/TwoFactorAuthenticationForm.vue","../../../resources/js/modules/user/profile/pages/Show.vue","../../../resources/js/modules/user/profile/pages/Show.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { useForm } from '@inertiajs/vue3';\nimport ActionMessage from '@/components/auth/ActionMessage.vue';\nimport ActionSection from '@/components/auth/ActionSection.vue';\n\nimport { VDialog, VTextField, VBtn, VRow, VCol } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\nimport profileService from '@/modules/user/profile/services/profile.js';\nimport { router } from '@inertiajs/vue3';\n\n@Component({\n  components: {\n    ActionMessage,\n    ActionSection,\n    VDialog,\n    VTextField,\n    VBtn,\n    VRow,\n    VCol,\n  }\n})\nclass LogoutOtherBrowserSessionsForm extends Vue {\n  @Prop({ type: Array }) sessions;\n  confirmingLogout = false;\n  @Ref('passwordInput') passwordInput;\n  form = useForm({\n    password: '',\n  });\n\n  confirmLogout(){\n    this.confirmingLogout = true;\n    setTimeout(() => this.passwordInput.focus(), 250);\n  };\n\n  async logoutOtherBrowserSessions(){\n    try{\n      let res = await profileService.logoutOtherBrowserSessions(this.form);\n      this.closeModal();\n    } catch (error) {\n      this.passwordInput.focus();\n    } finally {\n      this.form.reset();\n    }\n  };\n\n  closeModal(){\n    this.confirmingLogout = false;\n\n    this.form.reset();\n  };\n}\nexport default toNative(LogoutOtherBrowserSessionsForm);\n</script>\n\n<template>\n    <ActionSection>\n      <template #title>Browser Sessions</template>\n      <template #description>\n        Manage and log out your active sessions on other browsers and devices.\n      </template>\n  \n      <template #content>\n        <p class=\"text-body-1\">\n          If necessary, you may log out of all other browser sessions. Some recent\n          sessions are listed below.\n        </p>\n        <div v-if=\"sessions.length\" class=\"mt-5 space-y-4\">\n          <VRow v-for=\"(session, i) in sessions\" :key=\"i\" class=\"items-center\">\n            <VCol cols=\"1\">\n              <VIcon>{{ session.agent.is_desktop ? 'mdi-monitor' : 'mdi-cellphone' }}</VIcon>\n            </VCol>\n            <VCol cols=\"11\">\n              <p>\n                {{ session.agent.platform || 'Unknown' }} - {{ session.agent.browser || 'Unknown' }}\n              </p>\n              <p class=\"text-body-1 text-sm\">\n                {{ session.ip_address }}\n                <span v-if=\"session.is_current_device\" class=\"text-green-500 font-semibold\">(This device)</span>\n                <span v-else>Last active {{ session.last_active }}</span>\n              </p>\n            </VCol>\n          </VRow>\n        </div>\n  \n        <div class=\"flex items-center mt-5\">\n          <VBtn color=\"primary\" @click=\"confirmLogout\">Log Out Other Browser Sessions</VBtn>\n          <ActionMessage :on=\"form.recentlySuccessful\" class=\"ms-3\">Done.</ActionMessage>\n        </div>\n  \n        <VDialog v-model=\"confirmingLogout\" max-width=\"500px\">\n          <VRow class=\"p-4\">\n            <VCol>\n              <h3>Log Out Other Browser Sessions</h3>\n              <p class=\"mt-2\">Please enter your password to confirm.</p>\n              <VTextField\n                ref=\"passwordInput\"\n                v-model=\"form.password\"\n                label=\"Password\"\n                type=\"password\"\n                autocomplete=\"current-password\"\n                variant=\"outlined\"\n                class=\"mt-4\"\n                @keyup.enter=\"logoutOtherBrowserSessions\"\n              />\n              <p v-if=\"form.errors.password\" class=\"text-red-500 text-sm mt-2\">\n                {{ form.errors.password }}\n              </p>\n              <div class=\"mt-4 flex justify-end\">\n                <VBtn variant=\"text\" @click=\"closeModal\">Cancel</VBtn>\n                <VBtn color=\"primary\" :loading=\"form.processing\" @click=\"logoutOtherBrowserSessions\" class=\"ms-3\">\n                  Log Out\n                </VBtn>\n              </div>\n            </VCol>\n          </VRow>\n        </VDialog>\n      </template>\n    </ActionSection>\n  </template>\n  ","<script lang=\"ts\">\nimport { useForm } from '@inertiajs/vue3';\nimport ActionMessage from '@/components/auth/ActionMessage.vue';\nimport ActionSection from '@/components/auth/ActionSection.vue';\n\nimport { VDialog, VTextField, VBtn, VRow, VCol } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative, Ref } from 'vue-facing-decorator';\nimport profileService from '@/modules/user/profile/services/profile.js';\nimport { router } from '@inertiajs/vue3';\n\n@Component({\n  components: {\n    ActionMessage,\n    ActionSection,\n    VDialog,\n    VTextField,\n    VBtn,\n    VRow,\n    VCol,\n  }\n})\nclass LogoutOtherBrowserSessionsForm extends Vue {\n  @Prop({ type: Array }) sessions;\n  confirmingLogout = false;\n  @Ref('passwordInput') passwordInput;\n  form = useForm({\n    password: '',\n  });\n\n  confirmLogout(){\n    this.confirmingLogout = true;\n    setTimeout(() => this.passwordInput.focus(), 250);\n  };\n\n  async logoutOtherBrowserSessions(){\n    try{\n      let res = await profileService.logoutOtherBrowserSessions(this.form);\n      this.closeModal();\n    } catch (error) {\n      this.passwordInput.focus();\n    } finally {\n      this.form.reset();\n    }\n  };\n\n  closeModal(){\n    this.confirmingLogout = false;\n\n    this.form.reset();\n  };\n}\nexport default toNative(LogoutOtherBrowserSessionsForm);\n</script>\n\n<template>\n    <ActionSection>\n      <template #title>Browser Sessions</template>\n      <template #description>\n        Manage and log out your active sessions on other browsers and devices.\n      </template>\n  \n      <template #content>\n        <p class=\"text-body-1\">\n          If necessary, you may log out of all other browser sessions. Some recent\n          sessions are listed below.\n        </p>\n        <div v-if=\"sessions.length\" class=\"mt-5 space-y-4\">\n          <VRow v-for=\"(session, i) in sessions\" :key=\"i\" class=\"items-center\">\n            <VCol cols=\"1\">\n              <VIcon>{{ session.agent.is_desktop ? 'mdi-monitor' : 'mdi-cellphone' }}</VIcon>\n            </VCol>\n            <VCol cols=\"11\">\n              <p>\n                {{ session.agent.platform || 'Unknown' }} - {{ session.agent.browser || 'Unknown' }}\n              </p>\n              <p class=\"text-body-1 text-sm\">\n                {{ session.ip_address }}\n                <span v-if=\"session.is_current_device\" class=\"text-green-500 font-semibold\">(This device)</span>\n                <span v-else>Last active {{ session.last_active }}</span>\n              </p>\n            </VCol>\n          </VRow>\n        </div>\n  \n        <div class=\"flex items-center mt-5\">\n          <VBtn color=\"primary\" @click=\"confirmLogout\">Log Out Other Browser Sessions</VBtn>\n          <ActionMessage :on=\"form.recentlySuccessful\" class=\"ms-3\">Done.</ActionMessage>\n        </div>\n  \n        <VDialog v-model=\"confirmingLogout\" max-width=\"500px\">\n          <VRow class=\"p-4\">\n            <VCol>\n              <h3>Log Out Other Browser Sessions</h3>\n              <p class=\"mt-2\">Please enter your password to confirm.</p>\n              <VTextField\n                ref=\"passwordInput\"\n                v-model=\"form.password\"\n                label=\"Password\"\n                type=\"password\"\n                autocomplete=\"current-password\"\n                variant=\"outlined\"\n                class=\"mt-4\"\n                @keyup.enter=\"logoutOtherBrowserSessions\"\n              />\n              <p v-if=\"form.errors.password\" class=\"text-red-500 text-sm mt-2\">\n                {{ form.errors.password }}\n              </p>\n              <div class=\"mt-4 flex justify-end\">\n                <VBtn variant=\"text\" @click=\"closeModal\">Cancel</VBtn>\n                <VBtn color=\"primary\" :loading=\"form.processing\" @click=\"logoutOtherBrowserSessions\" class=\"ms-3\">\n                  Log Out\n                </VBtn>\n              </div>\n            </VCol>\n          </VRow>\n        </VDialog>\n      </template>\n    </ActionSection>\n  </template>\n  ","<script lang=\"ts\">\nimport { Component, Prop, Vue, toNative } from 'vue-facing-decorator';\nimport { VDivider, VExpandTransition } from \"vuetify/components\";\n\n@Component({\n  components: {\n    VDivider,\n    VExpandTransition,\n  },\n})\nclass SectionBorder extends Vue {\n  @Prop({ type: Boolean, required: true }) on;\n}\n\nexport default toNative(SectionBorder);\n</script>\n\n<template>\n    <div class=\"d-none d-sm-block\">\n        <div class=\"py-8\">\n            <VDivider />\n        </div>\n    </div>\n</template>\n","<script lang=\"ts\">\nimport { Component, Prop, Vue, toNative } from 'vue-facing-decorator';\nimport { VDivider, VExpandTransition } from \"vuetify/components\";\n\n@Component({\n  components: {\n    VDivider,\n    VExpandTransition,\n  },\n})\nclass SectionBorder extends Vue {\n  @Prop({ type: Boolean, required: true }) on;\n}\n\nexport default toNative(SectionBorder);\n</script>\n\n<template>\n    <div class=\"d-none d-sm-block\">\n        <div class=\"py-8\">\n            <VDivider />\n        </div>\n    </div>\n</template>\n","<script lang=\"ts\">\nimport { Component, Vue, Ref, toNative, Prop, Emit } from 'vue-facing-decorator';\nimport { VDialog, VCard, VCardTitle, VCardText, VCardActions, VTextField, VBtn } from 'vuetify/components';\nimport axios from '@/plugins/axios';\nimport { useForm } from \"@inertiajs/vue3\";\n\n@Component({\n  components: {\n    VDialog,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VCardActions,\n    VTextField,\n    VBtn,\n  },\n  emits: ['confirmed']\n})\nclass ConfirmPassword extends Vue {\n  @Prop({ type: String, default: 'Confirm Password' }) title;\n  @Prop({ type: String, default: 'For your security, please confirm your password to continue.' }) content;\n  @Prop({ type: String, default: 'Confirm' }) button;\n\n  confirmingPassword = false;\n  form = useForm({ \n    password: '', \n    error: '', \n    processing: false \n  });\n  @Ref('passwordInput') passwordInput;\n\n  async startConfirmingPassword() {\n    const response = await axios.get(route('password.confirmation'));\n    if (response.data.confirmed) {\n      this.emitConfirmed();\n    } else {\n      this.confirmingPassword = true;\n      setTimeout(() => this.passwordInput?.focus(), 250);\n    }\n  }\n\n  @Emit('confirmed')\n  emitConfirmed(){ \n    return true;\n  }\n\n  async confirmPassword() {\n    this.form.processing = true;\n    try {\n      await axios.post(route('password.confirm'), { \n        password: this.form.password \n      });\n      this.form.processing = false;\n      this.closeModal();\n      this.$nextTick(this.emitConfirmed);\n    } catch (error) {\n      this.form.processing = false;\n      this.form.error = error.response.data.errors.password[0];\n      this.passwordInput.focus();\n    }\n  }\n\n  closeModal() {\n    this.confirmingPassword = false;\n    this.form.password = '';\n    this.form.error = '';\n  }\n}\n\nexport default toNative(ConfirmPassword);\n</script>\n\n<template>\n  <span>\n    <span @click=\"startConfirmingPassword\">\n      <slot />\n    </span>\n\n    <VDialog v-model=\"confirmingPassword\" persistent max-width=\"400px\">\n      <VCard>\n        <VCardTitle>{{ title }}</VCardTitle>\n        <VCardText>\n          {{ content }}\n          <VTextField\n            ref=\"passwordInput\"\n            v-model=\"form.password\"\n            type=\"password\"\n            class=\"mt-4\"\n            placeholder=\"Password\"\n            autocomplete=\"current-password\"\n            @keyup.enter=\"confirmPassword\"\n            variant=\"outlined\"\n          />\n          <p class=\"text-error mt-2\" v-if=\"form.error\">{{ form.error }}</p>\n        </VCardText>\n        <VCardActions>\n          <VBtn variant=\"text\" @click=\"closeModal\">Cancel</VBtn>\n          <VBtn color=\"primary\" variant=\"elevated\" :loading=\"form.processing\" @click=\"confirmPassword\">\n            {{ button }}\n          </VBtn>\n        </VCardActions>\n      </VCard>\n    </VDialog>\n  </span>\n</template>\n","<script lang=\"ts\">\nimport { Component, Vue, Ref, toNative, Prop, Emit } from 'vue-facing-decorator';\nimport { VDialog, VCard, VCardTitle, VCardText, VCardActions, VTextField, VBtn } from 'vuetify/components';\nimport axios from '@/plugins/axios';\nimport { useForm } from \"@inertiajs/vue3\";\n\n@Component({\n  components: {\n    VDialog,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VCardActions,\n    VTextField,\n    VBtn,\n  },\n  emits: ['confirmed']\n})\nclass ConfirmPassword extends Vue {\n  @Prop({ type: String, default: 'Confirm Password' }) title;\n  @Prop({ type: String, default: 'For your security, please confirm your password to continue.' }) content;\n  @Prop({ type: String, default: 'Confirm' }) button;\n\n  confirmingPassword = false;\n  form = useForm({ \n    password: '', \n    error: '', \n    processing: false \n  });\n  @Ref('passwordInput') passwordInput;\n\n  async startConfirmingPassword() {\n    const response = await axios.get(route('password.confirmation'));\n    if (response.data.confirmed) {\n      this.emitConfirmed();\n    } else {\n      this.confirmingPassword = true;\n      setTimeout(() => this.passwordInput?.focus(), 250);\n    }\n  }\n\n  @Emit('confirmed')\n  emitConfirmed(){ \n    return true;\n  }\n\n  async confirmPassword() {\n    this.form.processing = true;\n    try {\n      await axios.post(route('password.confirm'), { \n        password: this.form.password \n      });\n      this.form.processing = false;\n      this.closeModal();\n      this.$nextTick(this.emitConfirmed);\n    } catch (error) {\n      this.form.processing = false;\n      this.form.error = error.response.data.errors.password[0];\n      this.passwordInput.focus();\n    }\n  }\n\n  closeModal() {\n    this.confirmingPassword = false;\n    this.form.password = '';\n    this.form.error = '';\n  }\n}\n\nexport default toNative(ConfirmPassword);\n</script>\n\n<template>\n  <span>\n    <span @click=\"startConfirmingPassword\">\n      <slot />\n    </span>\n\n    <VDialog v-model=\"confirmingPassword\" persistent max-width=\"400px\">\n      <VCard>\n        <VCardTitle>{{ title }}</VCardTitle>\n        <VCardText>\n          {{ content }}\n          <VTextField\n            ref=\"passwordInput\"\n            v-model=\"form.password\"\n            type=\"password\"\n            class=\"mt-4\"\n            placeholder=\"Password\"\n            autocomplete=\"current-password\"\n            @keyup.enter=\"confirmPassword\"\n            variant=\"outlined\"\n          />\n          <p class=\"text-error mt-2\" v-if=\"form.error\">{{ form.error }}</p>\n        </VCardText>\n        <VCardActions>\n          <VBtn variant=\"text\" @click=\"closeModal\">Cancel</VBtn>\n          <VBtn color=\"primary\" variant=\"elevated\" :loading=\"form.processing\" @click=\"confirmPassword\">\n            {{ button }}\n          </VBtn>\n        </VCardActions>\n      </VCard>\n    </VDialog>\n  </span>\n</template>\n","import { useAuthStore } from '@/stores/auth';\r\nimport _axios from '@/plugins/axios'; \r\n\r\nclass TwoFactorAuthService{\r\n  constructor(axios) {\r\n    this.axios = axios || _axios;\r\n  }\r\n  async enableTwoFactorAuthentication(){\r\n    let res = await this.axios.post(route('two-factor.enable'));\r\n    let qrCode = await this.showQrCode();\r\n    let setupKey = await this.showSetupKey();\r\n    let recoveryCodes = await this.showRecoveryCodes();\r\n    return {\r\n      ...res.data,\r\n      qrCode,\r\n      setupKey,\r\n      recoveryCodes\r\n    }\r\n  };\r\n  async showQrCode(){\r\n    let res = await this.axios.get(route('two-factor.qr-code'));\r\n    return res.data.svg;\r\n  };\r\n\r\n  async showSetupKey(){\r\n    let res = await this.axios.get(route('two-factor.secret-key'));\r\n    return res.data.secretKey;\r\n  }\r\n\r\n  async showRecoveryCodes(){\r\n    let res = await this.axios.get(route('two-factor.recovery-codes'));\r\n    return res.data;\r\n  };\r\n\r\n  async confirmTwoFactorAuthentication(form){\r\n    let res = await this.axios.post(route('two-factor.confirm'), form);\r\n    return res.data;\r\n  };\r\n\r\n  async regenerateRecoveryCodes(){\r\n    let res = await this.axios.post(route('two-factor.confirm'));\r\n    return this.showRecoveryCodes();\r\n  };\r\n\r\n  async disableTwoFactorAuthentication(){\r\n    let res = await this.axios.delete(route('two-factor.disable'));\r\n    return res.data;\r\n  };\r\n}\r\n\r\nconst twoFactorAuthService = new TwoFactorAuthService();\r\n\r\nexport { TwoFactorAuthService, twoFactorAuthService };\r\nexport default twoFactorAuthService;\r\n","<script lang=\"ts\">\nimport { router, useForm, usePage } from '@inertiajs/vue3';\nimport ActionSection from '@/components/auth/ActionSection.vue';\nimport ConfirmsPassword from '@/components/auth/ConfirmsPassword.vue';\nimport InputError from '@/components/auth/InputError.vue';\n\nimport { VRow, VCol, VTextField, VBtn, VAlert, VCard, VCardText } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative, Ref, Watch } from 'vue-facing-decorator';\nimport twoFactorAuthService from '@/modules/user/auth/services/twofactor.js';\nimport profileService from '@/modules/user/profile/services/profile';\n\n@Component({\n  components: {\n    ActionSection,\n    InputError,\n    ConfirmsPassword,\n    VRow,\n    VCol,\n    VTextField,\n    VBtn,\n    VAlert,\n    VCard,\n    VCardText,\n  }\n})\nclass TwoFactorAuthenticationForm extends Vue {\n  @Prop({ type: Boolean }) requiresConfirmation;\n  page = usePage();\n  enabling = false;\n  confirming = false;\n  disabling = false;\n  qrCode = null;\n  setupKey = null;\n  recoveryCodes = [];\n  confirmationForm = useForm({\n    code: '',\n  });\n\n  get twoFactorEnabled(){\n    return !this.enabling && this.page.props.auth.user?.two_factor_enabled;\n  };\n\n  @Watch(\"twoFactorEnabled\")\n  twoFactorEnabledWatcher(newValue, oldValue) {\n    if (!newValue) {\n      this.confirmationForm.reset();\n      this.confirmationForm.clearErrors();\n    }\n  }\n  async enableTwoFactorAuthentication(){\n    this.enabling = true;\n    try{\n      let res = await twoFactorAuthService.enableTwoFactorAuthentication();\n      this.qrCode = res.qrCode;\n      this.setupKey = res.setupKey;\n      this.recoveryCodes = res.recoveryCodes;\n    } finally {\n      this.enabling = false;\n      this.confirming = this.requiresConfirmation;\n    }\n  };\n\n\n  async showRecoveryCodes(){\n    let res = await profileService.showRecoveryCodes();\n    this.recoveryCodes = res.data;\n  };\n\n  async confirmTwoFactorAuthentication(){\n    try{\n      let res = await twoFactorAuthService.confirmTwoFactorAuthentication(this.confirmationForm);\n      this.confirming = false;\n      this.qrCode = null;\n      this.setupKey = null;\n    } catch (error) {\n      if (error.response?.status === 422) {\n        this.confirmationForm.errors = error.response.data.errors;\n      } else {\n        console.error(\"Unexpected error:\", error);\n      }\n    }\n  };\n\n  async regenerateRecoveryCodes(){\n    let res = await twoFactorAuthService.regenerateRecoveryCodes();\n  };\n\n  async disableTwoFactorAuthentication(){\n    this.disabling = true;\n\n    let res = await twoFactorAuthService.disableTwoFactorAuthentication();\n    this.disabling = false;\n    this.confirming = false;\n  };\n}\nexport default toNative(TwoFactorAuthenticationForm);\n</script>\n\n<template>\n  <ActionSection>\n    <template #title>Two Factor Authentication</template>\n    <template #description>Add additional security to your account.</template>\n\n    <template #content>\n      <VAlert \n        v-if=\"twoFactorEnabled && !confirming\" \n        type=\"success\"\n        title=\"You have enabled two-factor authentication.\"\n      >\n      </VAlert>\n      <VAlert \n        v-else-if=\"twoFactorEnabled && confirming\" \n        type=\"info\"\n        title=\"Finish enabling two-factor authentication.\"\n      ></VAlert>\n      <VAlert \n        v-else \n        type=\"warning\"\n        title=\"You have not enabled two-factor authentication.\"\n      ></VAlert>\n      <p class=\"text-body-1 mt-2 mb-2\">\n        When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone's Google Authenticator application.\n      </p>\n\n      <VCard v-if=\"qrCode\" class=\"mt-4 pa-4\">\n        <VCardText>\n          <p v-if=\"confirming\">\n            To finish enabling two-factor authentication, scan the QR code using your authenticator app or enter the setup key.\n          </p>\n          <p v-else>Two-factor authentication is now enabled. Scan the QR code or enter the setup key.</p>\n        </VCardText>\n        <div class=\"text-center\" v-html=\"qrCode\"></div>\n        <VCardText v-if=\"setupKey\">\n          <strong>Setup Key:</strong> {{ setupKey }}\n        </VCardText>\n        <VRow v-if=\"confirming\" class=\"mt-4\">\n          <VCol cols=\"12\">\n            <VTextField v-model=\"confirmationForm.code\" label=\"Code\" autofocus @keyup.enter=\"confirmTwoFactorAuthentication\" />\n            <InputError :message=\"confirmationForm.errors.code\" />\n          </VCol>\n        </VRow>\n      </VCard>\n\n      <VCard v-if=\"recoveryCodes.length > 0 && !confirming\" class=\"mt-4 pa-4\">\n        <VCardText>\n          <p>Store these recovery codes safely. They help regain access if you lose your authentication device.</p>\n          <div class=\"bg-gray-100 dark:bg-gray-900 rounded-lg pa-4\">\n            <div v-for=\"code in recoveryCodes\" :key=\"code\">{{ code }}</div>\n          </div>\n        </VCardText>\n      </VCard>\n\n      <div class=\"mt-5\">\n        <ConfirmsPassword @confirmed=\"enableTwoFactorAuthentication\" v-if=\"!twoFactorEnabled\">\n          <VBtn color=\"primary\" variant=\"elevated\" :disabled=\"enabling\">Enable</VBtn>\n        </ConfirmsPassword>\n\n        <template v-else>\n          <ConfirmsPassword @confirmed=\"confirmTwoFactorAuthentication\" v-if=\"confirming\">\n            <VBtn color=\"primary\" class=\"me-3\" :disabled=\"enabling\">Confirm</VBtn>\n          </ConfirmsPassword>\n          \n          <ConfirmsPassword @confirmed=\"regenerateRecoveryCodes\" v-if=\"recoveryCodes.length > 0 && !confirming\">\n            <VBtn class=\"me-3\">Regenerate Recovery Codes</VBtn>\n          </ConfirmsPassword>\n\n          <ConfirmsPassword @confirmed=\"showRecoveryCodes\" v-if=\"recoveryCodes.length === 0 && !confirming\">\n            <VBtn class=\"me-3\">Show Recovery Codes</VBtn>\n          </ConfirmsPassword>\n\n          <ConfirmsPassword @confirmed=\"disableTwoFactorAuthentication\">\n            <VBtn color=\"error\" :disabled=\"disabling\">Disable</VBtn>\n          </ConfirmsPassword>\n        </template>\n      </div>\n    </template>\n  </ActionSection>\n</template>\n","<script lang=\"ts\">\nimport { router, useForm, usePage } from '@inertiajs/vue3';\nimport ActionSection from '@/components/auth/ActionSection.vue';\nimport ConfirmsPassword from '@/components/auth/ConfirmsPassword.vue';\nimport InputError from '@/components/auth/InputError.vue';\n\nimport { VRow, VCol, VTextField, VBtn, VAlert, VCard, VCardText } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative, Ref, Watch } from 'vue-facing-decorator';\nimport twoFactorAuthService from '@/modules/user/auth/services/twofactor.js';\nimport profileService from '@/modules/user/profile/services/profile';\n\n@Component({\n  components: {\n    ActionSection,\n    InputError,\n    ConfirmsPassword,\n    VRow,\n    VCol,\n    VTextField,\n    VBtn,\n    VAlert,\n    VCard,\n    VCardText,\n  }\n})\nclass TwoFactorAuthenticationForm extends Vue {\n  @Prop({ type: Boolean }) requiresConfirmation;\n  page = usePage();\n  enabling = false;\n  confirming = false;\n  disabling = false;\n  qrCode = null;\n  setupKey = null;\n  recoveryCodes = [];\n  confirmationForm = useForm({\n    code: '',\n  });\n\n  get twoFactorEnabled(){\n    return !this.enabling && this.page.props.auth.user?.two_factor_enabled;\n  };\n\n  @Watch(\"twoFactorEnabled\")\n  twoFactorEnabledWatcher(newValue, oldValue) {\n    if (!newValue) {\n      this.confirmationForm.reset();\n      this.confirmationForm.clearErrors();\n    }\n  }\n  async enableTwoFactorAuthentication(){\n    this.enabling = true;\n    try{\n      let res = await twoFactorAuthService.enableTwoFactorAuthentication();\n      this.qrCode = res.qrCode;\n      this.setupKey = res.setupKey;\n      this.recoveryCodes = res.recoveryCodes;\n    } finally {\n      this.enabling = false;\n      this.confirming = this.requiresConfirmation;\n    }\n  };\n\n\n  async showRecoveryCodes(){\n    let res = await profileService.showRecoveryCodes();\n    this.recoveryCodes = res.data;\n  };\n\n  async confirmTwoFactorAuthentication(){\n    try{\n      let res = await twoFactorAuthService.confirmTwoFactorAuthentication(this.confirmationForm);\n      this.confirming = false;\n      this.qrCode = null;\n      this.setupKey = null;\n    } catch (error) {\n      if (error.response?.status === 422) {\n        this.confirmationForm.errors = error.response.data.errors;\n      } else {\n        console.error(\"Unexpected error:\", error);\n      }\n    }\n  };\n\n  async regenerateRecoveryCodes(){\n    let res = await twoFactorAuthService.regenerateRecoveryCodes();\n  };\n\n  async disableTwoFactorAuthentication(){\n    this.disabling = true;\n\n    let res = await twoFactorAuthService.disableTwoFactorAuthentication();\n    this.disabling = false;\n    this.confirming = false;\n  };\n}\nexport default toNative(TwoFactorAuthenticationForm);\n</script>\n\n<template>\n  <ActionSection>\n    <template #title>Two Factor Authentication</template>\n    <template #description>Add additional security to your account.</template>\n\n    <template #content>\n      <VAlert \n        v-if=\"twoFactorEnabled && !confirming\" \n        type=\"success\"\n        title=\"You have enabled two-factor authentication.\"\n      >\n      </VAlert>\n      <VAlert \n        v-else-if=\"twoFactorEnabled && confirming\" \n        type=\"info\"\n        title=\"Finish enabling two-factor authentication.\"\n      ></VAlert>\n      <VAlert \n        v-else \n        type=\"warning\"\n        title=\"You have not enabled two-factor authentication.\"\n      ></VAlert>\n      <p class=\"text-body-1 mt-2 mb-2\">\n        When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone's Google Authenticator application.\n      </p>\n\n      <VCard v-if=\"qrCode\" class=\"mt-4 pa-4\">\n        <VCardText>\n          <p v-if=\"confirming\">\n            To finish enabling two-factor authentication, scan the QR code using your authenticator app or enter the setup key.\n          </p>\n          <p v-else>Two-factor authentication is now enabled. Scan the QR code or enter the setup key.</p>\n        </VCardText>\n        <div class=\"text-center\" v-html=\"qrCode\"></div>\n        <VCardText v-if=\"setupKey\">\n          <strong>Setup Key:</strong> {{ setupKey }}\n        </VCardText>\n        <VRow v-if=\"confirming\" class=\"mt-4\">\n          <VCol cols=\"12\">\n            <VTextField v-model=\"confirmationForm.code\" label=\"Code\" autofocus @keyup.enter=\"confirmTwoFactorAuthentication\" />\n            <InputError :message=\"confirmationForm.errors.code\" />\n          </VCol>\n        </VRow>\n      </VCard>\n\n      <VCard v-if=\"recoveryCodes.length > 0 && !confirming\" class=\"mt-4 pa-4\">\n        <VCardText>\n          <p>Store these recovery codes safely. They help regain access if you lose your authentication device.</p>\n          <div class=\"bg-gray-100 dark:bg-gray-900 rounded-lg pa-4\">\n            <div v-for=\"code in recoveryCodes\" :key=\"code\">{{ code }}</div>\n          </div>\n        </VCardText>\n      </VCard>\n\n      <div class=\"mt-5\">\n        <ConfirmsPassword @confirmed=\"enableTwoFactorAuthentication\" v-if=\"!twoFactorEnabled\">\n          <VBtn color=\"primary\" variant=\"elevated\" :disabled=\"enabling\">Enable</VBtn>\n        </ConfirmsPassword>\n\n        <template v-else>\n          <ConfirmsPassword @confirmed=\"confirmTwoFactorAuthentication\" v-if=\"confirming\">\n            <VBtn color=\"primary\" class=\"me-3\" :disabled=\"enabling\">Confirm</VBtn>\n          </ConfirmsPassword>\n          \n          <ConfirmsPassword @confirmed=\"regenerateRecoveryCodes\" v-if=\"recoveryCodes.length > 0 && !confirming\">\n            <VBtn class=\"me-3\">Regenerate Recovery Codes</VBtn>\n          </ConfirmsPassword>\n\n          <ConfirmsPassword @confirmed=\"showRecoveryCodes\" v-if=\"recoveryCodes.length === 0 && !confirming\">\n            <VBtn class=\"me-3\">Show Recovery Codes</VBtn>\n          </ConfirmsPassword>\n\n          <ConfirmsPassword @confirmed=\"disableTwoFactorAuthentication\">\n            <VBtn color=\"error\" :disabled=\"disabling\">Disable</VBtn>\n          </ConfirmsPassword>\n        </template>\n      </div>\n    </template>\n  </ActionSection>\n</template>\n","<script lang=\"ts\">\nimport AppLayout from '@/layouts/AppLayout.vue';\nimport DeleteUserForm from '../views/DeleteUserForm.vue';\nimport LogoutOtherBrowserSessionsForm from '../views/LogoutOtherBrowserSessionsForm.vue';\nimport SectionBorder from '@/components/auth/SectionBorder.vue';\nimport TwoFactorAuthenticationForm from '../views/TwoFactorAuthenticationForm.vue';\nimport UpdatePasswordForm from '../views/UpdatePasswordForm.vue';\nimport UpdateProfileInformationForm from '../views/UpdateProfileInformationForm.vue';\n\nimport { Component, Prop, Vue, toNative } from 'vue-facing-decorator';\nimport profileService from '@/modules/user/profile/services/profile.js';\nimport { router } from '@inertiajs/vue3';\n\n@Component({\n  components: {\n    AppLayout,\n    DeleteUserForm,\n    LogoutOtherBrowserSessionsForm,\n    SectionBorder,\n    TwoFactorAuthenticationForm,\n    UpdatePasswordForm,\n    UpdateProfileInformationForm\n  }\n})\nclass ProfileShowPage extends Vue {\n  @Prop({ type: Boolean }) confirmsTwoFactorAuthentication;\n  @Prop({ type: Array }) sessions;\n}\nexport default toNative(ProfileShowPage);\n</script>\n\n<template>\n    <AppLayout title=\"Profile\">\n        <template #header>\n            <h2 class=\"font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight\">\n                Profile\n            </h2>\n        </template>\n\n        <div>\n            <div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8\">\n                <div v-if=\"$page.props.jetstream.canUpdateProfileInformation\">\n                    <UpdateProfileInformationForm :user=\"$page.props.auth.user\" />\n\n                    <SectionBorder />\n                </div>\n\n                <div v-if=\"$page.props.jetstream.canUpdatePassword\">\n                    <UpdatePasswordForm class=\"mt-10 sm:mt-0\" />\n\n                    <SectionBorder />\n                </div>\n\n                <div v-if=\"$page.props.jetstream.canManageTwoFactorAuthentication\">\n                    <TwoFactorAuthenticationForm\n                        :requires-confirmation=\"confirmsTwoFactorAuthentication\"\n                        class=\"mt-10 sm:mt-0\"\n                    />\n\n                    <SectionBorder />\n                </div>\n\n                <LogoutOtherBrowserSessionsForm :sessions=\"sessions\" class=\"mt-10 sm:mt-0\" />\n\n                <template v-if=\"$page.props.jetstream.hasAccountDeletionFeatures\">\n                    <SectionBorder />\n\n                    <DeleteUserForm class=\"mt-10 sm:mt-0\" />\n                </template>\n            </div>\n        </div>\n    </AppLayout>\n</template>\n","<script lang=\"ts\">\nimport AppLayout from '@/layouts/AppLayout.vue';\nimport DeleteUserForm from '../views/DeleteUserForm.vue';\nimport LogoutOtherBrowserSessionsForm from '../views/LogoutOtherBrowserSessionsForm.vue';\nimport SectionBorder from '@/components/auth/SectionBorder.vue';\nimport TwoFactorAuthenticationForm from '../views/TwoFactorAuthenticationForm.vue';\nimport UpdatePasswordForm from '../views/UpdatePasswordForm.vue';\nimport UpdateProfileInformationForm from '../views/UpdateProfileInformationForm.vue';\n\nimport { Component, Prop, Vue, toNative } from 'vue-facing-decorator';\nimport profileService from '@/modules/user/profile/services/profile.js';\nimport { router } from '@inertiajs/vue3';\n\n@Component({\n  components: {\n    AppLayout,\n    DeleteUserForm,\n    LogoutOtherBrowserSessionsForm,\n    SectionBorder,\n    TwoFactorAuthenticationForm,\n    UpdatePasswordForm,\n    UpdateProfileInformationForm\n  }\n})\nclass ProfileShowPage extends Vue {\n  @Prop({ type: Boolean }) confirmsTwoFactorAuthentication;\n  @Prop({ type: Array }) sessions;\n}\nexport default toNative(ProfileShowPage);\n</script>\n\n<template>\n    <AppLayout title=\"Profile\">\n        <template #header>\n            <h2 class=\"font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight\">\n                Profile\n            </h2>\n        </template>\n\n        <div>\n            <div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8\">\n                <div v-if=\"$page.props.jetstream.canUpdateProfileInformation\">\n                    <UpdateProfileInformationForm :user=\"$page.props.auth.user\" />\n\n                    <SectionBorder />\n                </div>\n\n                <div v-if=\"$page.props.jetstream.canUpdatePassword\">\n                    <UpdatePasswordForm class=\"mt-10 sm:mt-0\" />\n\n                    <SectionBorder />\n                </div>\n\n                <div v-if=\"$page.props.jetstream.canManageTwoFactorAuthentication\">\n                    <TwoFactorAuthenticationForm\n                        :requires-confirmation=\"confirmsTwoFactorAuthentication\"\n                        class=\"mt-10 sm:mt-0\"\n                    />\n\n                    <SectionBorder />\n                </div>\n\n                <LogoutOtherBrowserSessionsForm :sessions=\"sessions\" class=\"mt-10 sm:mt-0\" />\n\n                <template v-if=\"$page.props.jetstream.hasAccountDeletionFeatures\">\n                    <SectionBorder />\n\n                    <DeleteUserForm class=\"mt-10 sm:mt-0\" />\n                </template>\n            </div>\n        </div>\n    </AppLayout>\n</template>\n"],"names":["LogoutOtherBrowserSessionsForm","useForm","__decorateClass","Prop","Ref","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_5","_resolveComponent","_openBlock","_createBlock","_withCtx","_createTextVNode","sessions","_createElementVNode","_createElementBlock","_Fragment","_renderList","_component_VRow","_createVNode","_component_VCol","_component_VIcon","_toDisplayString","_hoisted_4","_createCommentVNode","confirmLogout","form","_component_VDialog","_component_VTextField","_withKeys","closeModal","SectionBorder","axios","Emit","_renderSlot","_component_VCard","_component_VCardTitle","title","_component_VCardText","content","_component_VCardActions","_component_VBtn","confirmPassword","_axios","TwoFactorAuthenticationForm","usePage","Watch","_component_VAlert","twoFactorEnabled","qrCode","confirming","setupKey","confirmationForm","enableTwoFactorAuthentication","confirmTwoFactorAuthentication","recoveryCodes","regenerateRecoveryCodes","showRecoveryCodes","disabling","$page","confirmsTwoFactorAuthentication"],"mappings":"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"}