{"version":3,"file":"Index-CBfTdBmL.js","sources":["../../../resources/js/modules/chirps/pages/Index.vue","../../../resources/js/modules/chirps/pages/Index.vue"],"sourcesContent":["<script lang=\"ts\">\nimport AppLayout from '@/layouts/AppLayout.vue';\nimport Chirp from '@/modules/chirps/components/Chirp.vue';\nimport { useForm, Head } from '@inertiajs/vue3';\nimport axios from '@/plugins/axios'; \n\nimport { VContainer, VTextarea, VBtn, VCard } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative } from 'vue-facing-decorator';\n\n@Component({\n  components: {\n    AppLayout,\n    Chirp,\n    VContainer,\n    VTextarea,\n    VBtn,\n    VCard\n  }\n})\nclass ChirpsPage extends Vue {\n  @Prop(Array) chirps = []; // Adjust the type as necessary for chirps\n\n  // Form data\n  form = useForm({\n    message: '',\n  });\n\n  mounted(){\n  }\n\n  async create(){\n    // await this.form.post(route('chirps.store'));\n\n    let res = await axios.post(route('chirps.store'), this.form);\n    this.chirps.unshift(res.data.chirp);\n\n    this.form.reset();\n  }\n  update(chirp){\n    const index = this.chirps.findIndex(chirp => chirp.id === chirp.id);\n    if (index !== -1) {\n      this.chirps[index] = chirp; // Replace with updated chirp\n    }\n  }\n  remove(id){\n    const index = this.chirps.findIndex(chirp => chirp.id === id);\n    this.chirps.splice(index, 1);\n  }\n}\nexport default toNative(ChirpsPage);\n</script>\n \n<template>\n  <Head title=\"Chirps\" />\n  <AppLayout>\n    <VContainer class=\"max-w-2xl mx-auto p-4 sm:p-6 lg:p-8\">\n      <form @submit.prevent=\"create\">\n        <VTextarea\n          v-model=\"form.message\"\n          label=\"What's on your mind?\"\n          variant=\"outlined\"\n        />\n        <VBtn class=\"mt-4\" color=\"primary\" type=\"submit\">Chirp</VBtn>\n      </form>\n      <VCard class=\"mt-6\">\n        <Chirp\n          v-for=\"chirp in chirps\"\n          :key=\"chirp.id\"\n          :chirp=\"chirp\"\n          @remove=\"remove\" \n          @update=\"update\" \n        />\n      </VCard>\n    </VContainer>\n  </AppLayout>\n</template>\n","<script lang=\"ts\">\nimport AppLayout from '@/layouts/AppLayout.vue';\nimport Chirp from '@/modules/chirps/components/Chirp.vue';\nimport { useForm, Head } from '@inertiajs/vue3';\nimport axios from '@/plugins/axios'; \n\nimport { VContainer, VTextarea, VBtn, VCard } from 'vuetify/components';\nimport { Component, Prop, Vue, toNative } from 'vue-facing-decorator';\n\n@Component({\n  components: {\n    AppLayout,\n    Chirp,\n    VContainer,\n    VTextarea,\n    VBtn,\n    VCard\n  }\n})\nclass ChirpsPage extends Vue {\n  @Prop(Array) chirps = []; // Adjust the type as necessary for chirps\n\n  // Form data\n  form = useForm({\n    message: '',\n  });\n\n  mounted(){\n  }\n\n  async create(){\n    // await this.form.post(route('chirps.store'));\n\n    let res = await axios.post(route('chirps.store'), this.form);\n    this.chirps.unshift(res.data.chirp);\n\n    this.form.reset();\n  }\n  update(chirp){\n    const index = this.chirps.findIndex(chirp => chirp.id === chirp.id);\n    if (index !== -1) {\n      this.chirps[index] = chirp; // Replace with updated chirp\n    }\n  }\n  remove(id){\n    const index = this.chirps.findIndex(chirp => chirp.id === id);\n    this.chirps.splice(index, 1);\n  }\n}\nexport default toNative(ChirpsPage);\n</script>\n \n<template>\n  <Head title=\"Chirps\" />\n  <AppLayout>\n    <VContainer class=\"max-w-2xl mx-auto p-4 sm:p-6 lg:p-8\">\n      <form @submit.prevent=\"create\">\n        <VTextarea\n          v-model=\"form.message\"\n          label=\"What's on your mind?\"\n          variant=\"outlined\"\n        />\n        <VBtn class=\"mt-4\" color=\"primary\" type=\"submit\">Chirp</VBtn>\n      </form>\n      <VCard class=\"mt-6\">\n        <Chirp\n          v-for=\"chirp in chirps\"\n          :key=\"chirp.id\"\n          :chirp=\"chirp\"\n          @remove=\"remove\" \n          @update=\"update\" \n        />\n      </VCard>\n    </VContainer>\n  </AppLayout>\n</template>\n"],"names":["useForm","axios","chirp","Prop","_resolveComponent","_openBlock","_createElementBlock","_Fragment","_createVNode","_withCtx","_component_VContainer","_createElementVNode","_withModifiers","_component_VTextarea","_component_VBtn","_createTextVNode","_component_VCard","_renderList","_createBlock","remove"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAM,aAAN,cAAyB,IAAI;AAAA,EAA7B;AAAA;AACe,kCAAS,CAAC;AAGvB;AAAA;AAAA,gCAAOA,EAAQ;AAAA,MACb,SAAS;AAAA,IAAA,CACV;AAAA;AAAA,EAED,UAAS;AAAA,EAAA;AAAA,EAGT,MAAM,SAAQ;AAGR,QAAA,MAAM,MAAMC,IAAM,KAAK,MAAM,cAAc,GAAG,KAAK,IAAI;AAC3D,SAAK,OAAO,QAAQ,IAAI,KAAK,KAAK;AAElC,SAAK,KAAK,MAAM;AAAA,EAAA;AAAA,EAElB,OAAO,OAAM;AACL,UAAA,QAAQ,KAAK,OAAO,UAAU,CAAAC,WAASA,OAAM,OAAOA,OAAM,EAAE;AAClE,QAAI,UAAU,IAAI;AACX,WAAA,OAAO,KAAK,IAAI;AAAA,IAAA;AAAA,EACvB;AAAA,EAEF,OAAO,IAAG;AACR,UAAM,QAAQ,KAAK,OAAO,UAAU,CAAS,UAAA,MAAM,OAAO,EAAE;AACvD,SAAA,OAAO,OAAO,OAAO,CAAC;AAAA,EAAA;AAE/B;AA5Be,gBAAA;AAAA,EAAZC,UAAK,KAAK;AAAA,GADP,WACS,WAAA,UAAA,CAAA;AADT,aAAN,gBAAA;AAAA,EAVC,UAAU;AAAA,IACT,YAAY;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAEH,CAAA;AAAA,GACK,UAAA;AA8BN,MAAe,YAAA,SAAS,UAAU;;;;ACjDlC,QAAA,uBAAAC,iBAAA,WAAA;SAsDEC,UAoBY,GAAAC,mBAAAC,UAAA,MAAA;AAAA,IAAAC,YA1Ed,iBAyEiB,EAAA,OAAA,SAAA,CAAA;AAAA,IAAAA,YAlBb,sBAkBa,MAAA;AAAA,MAAA,SAzEjBC,QA+Da,MAAA;AAAA,QAAAD,YAPPE,YAOO,EAAA,OAAA,sCAAA,GAAA;AAAA,UAAA,SAPAD,QAAM,MAAA;AAAA,YAAAE,gBAAA,QAAA;AAAA,cACX,UAIE,OAAA,CAAA,MAAA,OAAA,CAAA,IAAAC,cAAA,IAAA,SAAA,KAAA,UAAA,KAAA,OAAA,GAAA,IAAA,GAAA,CAAA,SAAA,CAAA;AAAA,YAAA,GAAA;AAAA,cA7DVJ,YAAAK,WAAA;AAAA,gBA2DU,YAAM,KAAA,KAAA;AAAA,gBACN,uBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,KAAA,UAAA;AAAA,gBAAA,OAAA;AAAA,gBAEpB,SAAA;AAAA,cAAA,GAAM,MAAM,GAAM,CAAA,YAAA,CAAA;AAAA,cAAAL,YAAOM,MAAS;AAAA,gBAAC,OAAK;AAAA,gBAAA,OAAA;AAAA,gBA9DhD,MAAA;AAAA,cAAA,GAAA;AAAA;kBAAAC,gBAAA,OAAA;AAAA,gBAAA,EAAA;AAAA;cAgEM,CAAA;AAAA,YAhEN,GAAA,EAAA;AAAA,YAAAP,YAAAQ,OAiEQ,EAME,OAAA,OAAA,GAAA;AAAA,cAAA,SAAAP,QAAA,MAAA;AAAA,iBAJMJ,UAAA,IAAM,GAAEC,mBAAAC,UAAA,MAAAU,WAAA,KAAA,QAAA,CAAA,UAAA;yBACRZ,UAAO,GAAAa,YAAA,kBAAA;AAAA,oBACZ,KAAQC,MAAAA;AAAAA,oBACR;AAAA,oBAAA,UAAA,KAAA;AAAA;;gBAtEX,CAAA,GAAA,GAAA;AAAA,cAAA,CAAA;AAAA;YAAA,CAAA;AAAA,UAAA,CAAA;AAAA;QAAA,CAAA;AAAA,MAAA,CAAA;AAAA;;;;;"}