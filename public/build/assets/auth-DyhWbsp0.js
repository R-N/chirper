import{af as i,z as u}from"./app-DrYLPU_X.js";const r=i("auth",{state:()=>({auth_token:null,user:{id:0,name:"",email:""}}),getters:{isAuthenticated:s=>!!s.auth_token},actions:{updateUser(s){Object.assign(this.user,s)},setAuthToken(s){this.auth_token=s},logout(){this.auth_token=null,this.updateUser({id:0,name:"",email:""})}},persist:{storage:localStorage}});class n{constructor(t){this.axios=t||u}async login(t){const e=r();t=t.transform(o=>({...o,remember:o.remember?"on":""}));let a=await this.axios.post("/login",t);return e.updateUser(a.data.user),e.setAuthToken(a.data.auth_token),a}async logout(){const t=r();let e=await this.axios.post("/logout");return t.logout(),e}async switchToTeam(t){return(await this.axios.put(route("current-team.update"),{team_id:t.id})).data}async register(t){const e=r();let a=await this.axios.post("/register",t);return a.data.suer&&e.updateUser(a.data.user),a.data.auth_token&&e.setAuthToken(a.data.auth_token),a.data}async twoFactorLogin(t){return(await this.axios.post(route("two-factor.login"),t)).data}async forgotPassword(t){return(await this.axios.post(route("password.email"),t)).data}async resetPassword(t){let e=route("password.update");return(await this.axios.post(e,t)).data}async confirmPassword(t){return(await this.axios.post(route("password.confirm"),t)).data}}const d=new n;export{d as a};
